import { respond } from "@sveltejs/kit/ssr";
import { create_ssr_component, validate_component, missing_component, escape as escape$1, each, subscribe, set_store_value, add_attribute, noop } from "svelte/internal";
import { setContext, afterUpdate, onMount, onDestroy, getContext, createEventDispatcher } from "svelte";
import { crossfade } from "svelte/transition";
import { quintOut } from "svelte/easing";
import { writable as writable$1 } from "svelte/store";
import "svelte/animate";
import axios from "axios";
import StoreX from "stores-x";
import "connectome/stores";
import { highlightCode, marked } from "markdown-hljs";
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}";
const css$8 = {
  code: "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n<\/script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>#svelte-announcer{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}</style>"],"names":[],"mappings":"AAqDO,gCAAiB,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,MAAM,CAAC,MAAM,GAAG,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page: page2 } = $$props;
  let { components } = $$props;
  let { props_0 = null } = $$props;
  let { props_1 = null } = $$props;
  let { props_2 = null } = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$8);
  {
    stores.page.set(page2);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1pdgbjn"}">${navigated ? `${escape$1(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({ head, body }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.png" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
function init(settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-562410a6.js",
      css: ["/./_app/assets/start-0826e215.css", "/./_app/assets/vendor-5d65e01d.css"],
      js: ["/./_app/start-562410a6.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/singletons-bb9012b7.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    router: true,
    ssr: true,
    target: "#svelte",
    template,
    trailing_slash: "never"
  };
}
const d = decodeURIComponent;
const empty = () => ({});
const manifest = {
  assets: [{ "file": "favicon.png", "size": 1571, "type": "image/png" }],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/file-manager\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/file-manager.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/view\/embed-([^/]+?)\/?$/,
      params: (m) => ({ storage: d(m[1]) }),
      a: ["src/routes/view/__layout.reset.svelte", "src/routes/view/embed-[storage].svelte"],
      b: []
    },
    {
      type: "page",
      pattern: /^\/view\/media-([^/]+?)\/?$/,
      params: (m) => ({ storage: d(m[1]) }),
      a: ["src/routes/view/__layout.reset.svelte", "src/routes/view/media-[storage].svelte"],
      b: []
    },
    {
      type: "page",
      pattern: /^\/view\/text-([^/]+?)\/?$/,
      params: (m) => ({ storage: d(m[1]) }),
      a: ["src/routes/view/__layout.reset.svelte", "src/routes/view/text-[storage].svelte"],
      b: []
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({ request, resolve }) => resolve(request))
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index;
  }),
  "src/routes/file-manager.svelte": () => Promise.resolve().then(function() {
    return fileManager;
  }),
  "src/routes/view/__layout.reset.svelte": () => Promise.resolve().then(function() {
    return __layout_reset;
  }),
  "src/routes/view/embed-[storage].svelte": () => Promise.resolve().then(function() {
    return embed__storage_;
  }),
  "src/routes/view/media-[storage].svelte": () => Promise.resolve().then(function() {
    return media__storage_;
  }),
  "src/routes/view/text-[storage].svelte": () => Promise.resolve().then(function() {
    return text__storage_;
  })
};
const metadata_lookup = { "src/routes/__layout.svelte": { "entry": "/./_app/pages/__layout.svelte-d48df979.js", "css": ["/./_app/assets/pages/__layout.svelte-c73c9a24.css", "/./_app/assets/vendor-5d65e01d.css", "/./_app/assets/dark_mode-53463930.css"], "js": ["/./_app/pages/__layout.svelte-d48df979.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/dark_mode-502a2968.js", "/./_app/chunks/index-16bd9a46.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/getAPi-d548b28c.js"], "styles": null }, ".svelte-kit/build/components/error.svelte": { "entry": "/./_app/error.svelte-cf55fe35.js", "css": ["/./_app/assets/vendor-5d65e01d.css"], "js": ["/./_app/error.svelte-cf55fe35.js", "/./_app/chunks/vendor-51b7d296.js"], "styles": null }, "src/routes/index.svelte": { "entry": "/./_app/pages/index.svelte-e7fae80f.js", "css": ["/./_app/assets/pages/index.svelte-763692ef.css", "/./_app/assets/vendor-5d65e01d.css"], "js": ["/./_app/pages/index.svelte-e7fae80f.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/storage-select-7f98a06b.js", "/./_app/chunks/index-16bd9a46.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/getAPi-d548b28c.js"], "styles": null }, "src/routes/file-manager.svelte": { "entry": "/./_app/pages/file-manager.svelte-f7570391.js", "css": ["/./_app/assets/pages/file-manager.svelte-6c5ad5b3.css", "/./_app/assets/vendor-5d65e01d.css"], "js": ["/./_app/pages/file-manager.svelte-f7570391.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/index-16bd9a46.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/getAPi-d548b28c.js", "/./_app/chunks/storage-select-7f98a06b.js"], "styles": null }, "src/routes/view/__layout.reset.svelte": { "entry": "/./_app/pages/view/__layout.reset.svelte-ff7e91fc.js", "css": ["/./_app/assets/vendor-5d65e01d.css", "/./_app/assets/dark_mode-53463930.css"], "js": ["/./_app/pages/view/__layout.reset.svelte-ff7e91fc.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/dark_mode-502a2968.js", "/./_app/chunks/index-16bd9a46.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/getAPi-d548b28c.js"], "styles": null }, "src/routes/view/embed-[storage].svelte": { "entry": "/./_app/pages/view/embed-[storage].svelte-ca274ef8.js", "css": ["/./_app/assets/vendor-5d65e01d.css"], "js": ["/./_app/pages/view/embed-[storage].svelte-ca274ef8.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/getAPi-d548b28c.js"], "styles": null }, "src/routes/view/media-[storage].svelte": { "entry": "/./_app/pages/view/media-[storage].svelte-6fd5b27e.js", "css": ["/./_app/assets/pages/view/media-[storage].svelte-031acc1e.css", "/./_app/assets/vendor-5d65e01d.css"], "js": ["/./_app/pages/view/media-[storage].svelte-6fd5b27e.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/getAPi-d548b28c.js"], "styles": null }, "src/routes/view/text-[storage].svelte": { "entry": "/./_app/pages/view/text-[storage].svelte-25ae88d5.js", "css": ["/./_app/assets/vendor-5d65e01d.css"], "js": ["/./_app/pages/view/text-[storage].svelte-25ae88d5.js", "/./_app/chunks/vendor-51b7d296.js", "/./_app/chunks/getAPi-d548b28c.js", "/./_app/chunks/index-16bd9a46.js", "/./_app/chunks/singletons-bb9012b7.js"], "styles": null } };
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
init({ paths: { "base": "", "assets": "/." } });
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({ ...request, host }, options, { prerender });
}
const notification = writable$1();
var Notifications_svelte_svelte_type_style_lang = '.toasts{list-style:none;margin:0;padding:0;position:fixed;right:0;top:0;z-index:9999}.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9{-webkit-animation:svelte-hsvff9-animate-in .6s forwards;animation:svelte-hsvff9-animate-in .6s forwards;color:#fff;margin:1vh 1vw;min-width:40vw;position:relative}.svelte-hsvff9.toasts>.toast.svelte-hsvff9>.content.svelte-hsvff9{display:block;font-weight:500;padding:1vw}.svelte-hsvff9.toasts>.toast.svelte-hsvff9>.progress.svelte-hsvff9{-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-name:svelte-hsvff9-shrink;animation-name:svelte-hsvff9-shrink;-webkit-animation-timing-function:linear;animation-timing-function:linear;background-color:rgb(0,0,0,.3);bottom:0;height:6px;position:absolute;width:100%}.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9:after,.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9:before{border-radius:100px/10px;bottom:0;content:"";left:1vw;position:absolute;right:1vw;top:50%;z-index:-1}.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9:after{left:auto;right:1vw;transform:skew(8deg) rotate(3deg)}@-webkit-keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@-webkit-keyframes svelte-hsvff9-shrink{0%{width:98vw}to{width:0}}@keyframes svelte-hsvff9-shrink{0%{width:98vw}to{width:0}}@media(min-width:480px){@-webkit-keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@-webkit-keyframes svelte-hsvff9-shrink{0%{width:40vw}to{width:0}}@keyframes svelte-hsvff9-shrink{0%{width:40vw}to{width:0}}}';
const css$7 = {
  code: '.toasts{list-style:none;margin:0;padding:0;position:fixed;right:0;top:0;z-index:9999}.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9{-webkit-animation:svelte-hsvff9-animate-in .6s forwards;animation:svelte-hsvff9-animate-in .6s forwards;color:#fff;margin:1vh 1vw;min-width:40vw;position:relative}.svelte-hsvff9.toasts>.toast.svelte-hsvff9>.content.svelte-hsvff9{display:block;font-weight:500;padding:1vw}.svelte-hsvff9.toasts>.toast.svelte-hsvff9>.progress.svelte-hsvff9{-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-name:svelte-hsvff9-shrink;animation-name:svelte-hsvff9-shrink;-webkit-animation-timing-function:linear;animation-timing-function:linear;background-color:rgb(0,0,0,.3);bottom:0;height:6px;position:absolute;width:100%}.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9:after,.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9:before{border-radius:100px/10px;bottom:0;content:"";left:1vw;position:absolute;right:1vw;top:50%;z-index:-1}.svelte-hsvff9.toasts>.toast.svelte-hsvff9.svelte-hsvff9:after{left:auto;right:1vw;transform:skew(8deg) rotate(3deg)}@-webkit-keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@-webkit-keyframes svelte-hsvff9-shrink{0%{width:98vw}to{width:0}}@keyframes svelte-hsvff9-shrink{0%{width:98vw}to{width:0}}@media(min-width:480px){@-webkit-keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes svelte-hsvff9-animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@-webkit-keyframes svelte-hsvff9-shrink{0%{width:40vw}to{width:0}}@keyframes svelte-hsvff9-shrink{0%{width:40vw}to{width:0}}}',
  map: `{"version":3,"file":"Notifications.svelte","sources":["Notifications.svelte"],"sourcesContent":["<ul class=\\"toasts\\">\\n\\t{#each toasts as toast (toast.id)}\\n\\t\\t<li class=\\"toast\\" style=\\"background: {toast.background};\\" out:animateOut>\\n\\t\\t\\t<div class=\\"content\\">\\n\\t\\t\\t\\t{toast.msg}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div \\n        class=\\"progress\\" \\n        style=\\"animation-duration: {toast.timeout}ms;\\"\\n        on:animationend={() => removeToast(toast.id) }>\\n\\t\\t\\t</div>\\n\\t\\t</li>\\t\\n\\t{/each}\\n</ul>\\n\\n<style>:global(.toasts){list-style:none;margin:0;padding:0;position:fixed;right:0;top:0;z-index:9999}:global(.toasts)>.toast{-webkit-animation:animate-in .6s forwards;animation:animate-in .6s forwards;color:#fff;margin:1vh 1vw;min-width:40vw;position:relative}:global(.toasts)>.toast>.content{display:block;font-weight:500;padding:1vw}:global(.toasts)>.toast>.progress{-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-name:shrink;animation-name:shrink;-webkit-animation-timing-function:linear;animation-timing-function:linear;background-color:rgb(0,0,0,.3);bottom:0;height:6px;position:absolute;width:100%}:global(.toasts)>.toast:after,:global(.toasts)>.toast:before{border-radius:100px/10px;bottom:0;content:\\"\\";left:1vw;position:absolute;right:1vw;top:50%;z-index:-1}:global(.toasts)>.toast:after{left:auto;right:1vw;transform:skew(8deg) rotate(3deg)}@-webkit-keyframes animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@-webkit-keyframes shrink{0%{width:98vw}to{width:0}}@keyframes shrink{0%{width:98vw}to{width:0}}@media (min-width:480px){@-webkit-keyframes animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes animate-in{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@-webkit-keyframes shrink{0%{width:40vw}to{width:0}}@keyframes shrink{0%{width:40vw}to{width:0}}}</style>\\n\\n<script>\\n  import { notification } from './store.js'\\n  import { onMount, onDestroy } from 'svelte'\\n\\n\\texport let themes = {\\n\\t\\tdanger: '#bb2124',\\n\\t\\tsuccess: '#22bb33',\\n\\t\\twarning: '#f0ad4e',\\n\\t\\tinfo: '#5bc0de',\\n\\t\\tdefault: '#aaaaaa'\\n  }\\n\\n  export let timeout = 3000\\n\\n\\tlet count = 0\\n\\tlet toasts = [ ]\\n  let unsubscribe\\n\\n\\tfunction animateOut(node, { delay = 0, duration = 1000 }) {\\n\\t\\tfunction vhTOpx (value) {\\n\\t\\t\\tvar w = window,\\n\\t\\t\\t\\td = document,\\n\\t\\t\\t\\te = d.documentElement,\\n\\t\\t\\t\\tg = d.getElementsByTagName('body')[0],\\n\\t\\t\\t\\tx = w.innerWidth || e.clientWidth || g.clientWidth,\\n\\t\\t\\t\\ty = w.innerHeight|| e.clientHeight|| g.clientHeight;\\n\\n\\t\\t\\treturn (y*value)/100;\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn {\\n\\t\\t\\tdelay,\\n\\t\\t\\tduration,\\n\\t\\t\\tcss: t => \`opacity: \${(t-.7) * 1}; transform-origin: top right;\`\\n\\t\\t}\\n\\t}\\n\\n\\tfunction createToast (msg, theme, to) {\\n\\t\\tconst background = themes[theme] || themes['default']\\n\\t\\ttoasts = [{\\n\\t\\t\\tid: count,\\n\\t\\t\\tmsg, \\n\\t\\t\\tbackground, \\n\\t\\t\\ttimeout: to || timeout,\\n\\t\\t\\twidth: '100%'\\n\\t\\t}, ...toasts];\\n\\t\\tcount = count + 1\\n  }\\n  \\n  unsubscribe = notification.subscribe(value => {\\n    if (!value) { return }\\n    createToast(value.message, value.type, value.timeout)\\n    notification.set()\\n  })\\n  \\n  onDestroy(unsubscribe)\\n\\t\\n\\tfunction removeToast (id) { \\n\\t\\ttoasts = toasts.filter(t => t.id != id)\\n\\t}\\n<\/script>\\n"],"names":[],"mappings":"AAee,OAAO,AAAC,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,cAAQ,OAAO,AAAC,CAAC,kCAAM,CAAC,kBAAkB,wBAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,wBAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,SAAS,QAAQ,CAAC,cAAQ,OAAO,AAAC,CAAC,oBAAM,CAAC,sBAAQ,CAAC,QAAQ,KAAK,CAAC,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,cAAQ,OAAO,AAAC,CAAC,oBAAM,CAAC,uBAAS,CAAC,4BAA4B,QAAQ,CAAC,oBAAoB,QAAQ,CAAC,uBAAuB,oBAAM,CAAC,eAAe,oBAAM,CAAC,kCAAkC,MAAM,CAAC,0BAA0B,MAAM,CAAC,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,SAAS,QAAQ,CAAC,MAAM,IAAI,CAAC,cAAQ,OAAO,AAAC,CAAC,kCAAM,MAAM,CAAC,cAAQ,OAAO,AAAC,CAAC,kCAAM,OAAO,CAAC,cAAc,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,SAAS,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC,cAAQ,OAAO,AAAC,CAAC,kCAAM,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,mBAAmB,wBAAU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,kCAAkC,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0BAA0B,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,CAAC,WAAW,wBAAU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,kCAAkC,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0BAA0B,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,CAAC,mBAAmB,oBAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,oBAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,mBAAmB,wBAAU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,kCAAkC,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0BAA0B,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,CAAC,WAAW,wBAAU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,kCAAkC,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,0BAA0B,aAAa,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,CAAC,mBAAmB,oBAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,oBAAM,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC"}`
};
const Notifications = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { themes = {
    danger: "#bb2124",
    success: "#22bb33",
    warning: "#f0ad4e",
    info: "#5bc0de",
    default: "#aaaaaa"
  } } = $$props;
  let { timeout = 3e3 } = $$props;
  let count = 0;
  let toasts = [];
  let unsubscribe;
  function createToast(msg, theme, to) {
    const background = themes[theme] || themes["default"];
    toasts = [
      {
        id: count,
        msg,
        background,
        timeout: to || timeout,
        width: "100%"
      },
      ...toasts
    ];
    count = count + 1;
  }
  unsubscribe = notification.subscribe((value) => {
    if (!value) {
      return;
    }
    createToast(value.message, value.type, value.timeout);
    notification.set();
  });
  onDestroy(unsubscribe);
  if ($$props.themes === void 0 && $$bindings.themes && themes !== void 0)
    $$bindings.themes(themes);
  if ($$props.timeout === void 0 && $$bindings.timeout && timeout !== void 0)
    $$bindings.timeout(timeout);
  $$result.css.add(css$7);
  return `<ul class="${"toasts svelte-hsvff9"}">${each(toasts, (toast) => `<li class="${"toast svelte-hsvff9"}" style="${"background: " + escape$1(toast.background) + ";"}"><div class="${"content svelte-hsvff9"}">${escape$1(toast.msg)}</div>
			<div class="${"progress svelte-hsvff9"}" style="${"animation-duration: " + escape$1(toast.timeout) + "ms;"}"></div>
		</li>`)}
</ul>`;
});
function send(message, type = "default", timeout) {
  notification.set({ type, message, timeout });
}
function danger(msg, timeout) {
  send(msg, "danger", timeout);
}
function warning(msg, timeout) {
  send(msg, "warning", timeout);
}
function info(msg, timeout) {
  send(msg, "info", timeout);
}
function success(msg, timeout) {
  send(msg, "success", timeout);
}
var notifier = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  send,
  danger,
  warning,
  info,
  success
});
const getStores = () => {
  const stores = getContext("__svelte__");
  return {
    page: {
      subscribe: stores.page.subscribe
    },
    navigating: {
      subscribe: stores.navigating.subscribe
    },
    get preloading() {
      console.error("stores.preloading is deprecated; use stores.navigating instead");
      return {
        subscribe: stores.navigating.subscribe
      };
    },
    session: stores.session
  };
};
const page = {
  subscribe(fn) {
    const store2 = getStores().page;
    return store2.subscribe(fn);
  }
};
const navigating = {
  subscribe(fn) {
    const store2 = getStores().navigating;
    return store2.subscribe(fn);
  }
};
function guard(name) {
  return () => {
    throw new Error(`Cannot call ${name}(...) on the server`);
  };
}
const goto = guard("goto");
const truncate = (text = "", max = 10) => {
  const len = text.length;
  const r = /(.+)\.([\w]+)$/.exec(text);
  if (r) {
    const dots = len > max ? ".. ." : ".";
    return r[1].slice(0, max) + dots + r[2];
  }
  text = text.slice(0, max);
  return len > max ? text + ".." : text;
};
const axiosFetch = async (instance, path, ...args) => {
  console.log("axiosFetch", path);
  try {
    const res = await instance(path, ...args);
    return { status: res.status, ok: true, headers: res.headers, body: res.data };
  } catch (error2) {
    return {
      status: error2.response.status,
      ok: false,
      headers: error2.response.headers,
      body: error2.response.data
    };
  }
};
const toQueryString = (obj = {}) => {
  let queryString = "";
  try {
    return Object.entries(obj).reduce((q, arr) => `${q}&${arr.join("=")}`, queryString).replace(/^&/, "?");
  } catch (_) {
    return queryString;
  }
};
class Pagination {
  constructor({
    total = 0,
    limit = 50,
    page: page2 = 0
  }) {
    this.limit = limit;
    this.page = page2;
    this.total = total;
  }
  get pages() {
    return Math.ceil(this.total / this.limit);
  }
  get offset() {
    return ((this.page || 1) - 1) * this.limit;
  }
  get has_next() {
    return this.page < this.pages;
  }
  get has_prev() {
    return this.page > 1;
  }
  get page_count() {
    return this.page < this.pages ? this.limit : this.total - this.limit * ((this.page || 1) - 1);
  }
  next() {
    if (this.has_next) {
      this.page++;
      console.log("page_count", this.page_count);
    }
  }
  prev() {
    if (this.has_prev) {
      this.page--;
    }
  }
}
let API = {}.VITE_API_URL;
const port = "3788";
console.log("API", API, port);
const axiosInstance = axios.create({
  baseURL: API
});
const api = {
  get: (path, ...args) => axiosFetch(axiosInstance.get, path, ...args),
  post: (path, ...args) => axiosFetch(axiosInstance.post, path, ...args)
};
const isMedia = (ctype, img = true) => {
  if (!ctype)
    ctype = "";
  return ctype.includes("video") || ctype.includes("audio") || (img ? ctype.includes("image") : false);
};
var main = {
  noStore: ["base_url", "notify"],
  storeType: {
    colorScheme: "localPersistantStore",
    clipboard: "sessionPersistantStore",
    render: "sessionPersistantStore"
  },
  state: {
    base_url: "/_app/".replace("_app/", ""),
    context_menu: [],
    pos: { x: 0, y: 0 },
    clipboard: null,
    notify: notifier,
    hideFilemenu: true,
    render: false,
    colorScheme: "light"
  },
  getters: {
    dirs(state, key, value = false) {
      var _a;
      if (key) {
        let dir = (_a = state.dirs.get()) == null ? void 0 : _a[key];
        if (dir && value === true)
          return dir;
        else if (!dir || value && typeof value !== "boolean") {
          state.dirs.update((dirs) => {
            dirs[key] = value || "/";
            state.dirs.set(dirs);
            return dirs;
          });
        }
      }
      return state.dirs;
    }
  },
  mutations: {
    setColorScheme(state, value) {
      state.colorScheme.set(value);
      localStorage.setItem("colorScheme", value);
    },
    updateDirs(state, key, value = "") {
      state.dirs.update((dirs) => {
        dirs[key] = value;
        return dirs;
      });
    }
  },
  actions: {
    open: async ({ state, commit, dispatch, g }, { path, isFile, size, storage, dkey, dir, ctype, inBrowser = false } = {}) => {
      if (!ctype)
        ctype = "";
      if (isFile) {
        {
          console.log("open", { size, storage, dkey, isFile, path, ctype });
          const view_args = storage + toQueryString({ path: escape(path), dkey, ctype, size });
          if (isMedia(ctype, true)) {
            if (!ctype.includes("image") && !inBrowser && state.serverStore.get().isMpvInstalled) {
              const url = API + "/media" + toQueryString({ storage, path: escape(path), dkey, ctype, size });
              api.post("/mpv_stream", {
                url
              });
            } else {
              const url = `/view/media-${view_args}`;
              goto(url);
            }
          } else if (ctype.includes("text") || ctype.includes("json")) {
            const url = `/view/text-${view_args}`;
            goto(url);
          } else if (ctype.includes("pdf")) {
            const url = `/view/embed-${view_args}`;
            goto(url);
          }
        }
      } else {
        dir = dir || "/";
        if (path) {
          dir = path;
          commit("updateDirs", dkey, path);
        }
        if (!state.socket)
          return;
        dispatch("loading", "load-page");
        const opts = { dir, show_hidden: state.show_hidden.get() };
        if (storage === "fs") {
          state.socket.on("ready", () => {
            state.socket.signal("fs-list", opts);
          });
          state.socket.signal("fs-list", opts);
        } else {
          state.socket.on("ready", () => {
            state.socket.signal("drive-list", { ...opts, dkey });
          });
          state.socket.signal("drive-list", { ...opts, dkey });
        }
      }
    },
    setupMenuItems({ dispatch, commit, g, state }, { size, storage, dkey, isFile, path, dir, name, ctype }) {
      const items = [
        {
          name: "open",
          action: () => {
            dispatch("open", { size, storage, dkey, isFile, dir, path, ctype });
            dispatch("context_menu", []);
          }
        },
        {
          name: "play in browser",
          action: () => {
            dispatch("open", { size, storage, dkey, isFile, dir, path, ctype, inBrowser: true });
            dispatch("context_menu", []);
          },
          disabled: !isMedia(ctype, false)
        },
        {
          name: "download",
          action: () => {
            dispatch("context_menu", []);
            const link = document.createElement("a");
            link.href = API + `/download?storage=${storage}&dkey=${dkey}&type=${isFile ? "file" : "dir"}&size=${size}&path=${escape(path)}`;
            document.body.appendChild(link);
            link.target = "_blank";
            link.click();
            link.remove();
          }
        },
        {
          name: "copy",
          action: () => {
            dispatch("clipboard", {
              path,
              dkey,
              name
            });
            state.notify.success(`${path.split("/").reverse()[0]} copied`);
            dispatch("context_menu", []);
          }
        },
        {
          name: "paste",
          action: () => {
            const src = g("clipboard").get();
            const dest = { path: !isFile && !path.endsWith("/") ? path + "/" : path, dkey, name };
            const event = `${src.path}-${dest.path}`;
            state.socket.signal("paste-copied", { src, dest });
            dispatch("context_menu", []);
            const onpaste = (payload) => {
              if (payload.dest.path === dest.path && payload.src.path === src.path) {
                state.socket.off(event, onpaste);
                state.success("pasted " + src.name + " to " + dest.name);
              }
            };
            state.socket.on(event, onpaste);
          },
          disabled: !g("clipboard").get()
        },
        {
          name: "delete",
          action: () => {
            state.socket.signal("delete-path-item", { path, dkey, name });
            dispatch("context_menu", []);
          }
        }
      ];
      dispatch("context_menu", items);
    },
    setupMainMenuItems({ dispatch, commit, g, state }, { storage, dkey, dir, name }) {
      const items = [
        {
          name: "new",
          action() {
          },
          options: {},
          disabled: true
        },
        {
          name: "paste",
          action: () => {
            const src = g("clipboard").get();
            const dest = { path: dir.endsWith("/") ? dir : dir + "/", dkey, name };
            const event = `${src.path}-${dest.path}`;
            state.socket.signal("paste-copied", { src, dest });
            dispatch("context_menu", []);
            const onpaste = (payload) => {
              if (payload.dest.path === dest.path && payload.src.path === src.path) {
                state.socket.off(event, onpaste);
                state.success("pasted " + src.name + " to " + dest.name);
              }
            };
            state.socket.on(event, onpaste);
          },
          disabled: !g("clipboard").get()
        }
      ];
      dispatch("context_menu", items);
    }
  }
};
const func = () => null;
const initPrompt = ({
  visible = false,
  message = "Here is a Prompt",
  acceptText = "accept",
  dismissText = "dismiss",
  onaccept = func,
  ondismiss = func
} = {}) => ({
  visible,
  message,
  onaccept: () => new Promise((resolve, reject) => {
    try {
      resolve(onaccept());
    } catch (err) {
      reject(err);
    }
  }),
  ondismiss: () => new Promise((resolve, reject) => {
    try {
      resolve(ondismiss());
    } catch (err) {
      reject(err);
    }
  }),
  acceptText,
  dismissText
});
var prompt = {
  state: {
    prompt: initPrompt()
  },
  mutations: {
    updatePromptValues(state, options2 = {}) {
      state.prompt.update((value) => {
        for (let option in options2) {
          value[option] = options2[option];
          return value;
        }
      });
    }
  },
  actions: {
    async showPrompt({ commit }, options2) {
      options2 = initPrompt({ ...options2, visible: true });
      commit("prompt", options2);
    },
    async hidePrompt({ commit }) {
      const options2 = initPrompt({ visible: false });
      commit("prompt", options2);
    }
  }
};
var connection = () => {
  return;
};
var socket = {
  noStore: ["api", "socket", "serverStore", "pagination"],
  storeType: {
    dkey: "sessionPersistantStore",
    show_hidden: "sessionPersistantStore",
    dirs: "sessionPersistantStore"
  },
  state: {
    api: null,
    pagination: {},
    loading: "load-page",
    socket: null,
    serverStore: null,
    drives: [],
    dkey: "fs",
    folder: [],
    dirs: { fs: "/" },
    show_hidden: true
  },
  actions: {
    async startConnection({ state, commit, dispatch, g }) {
      console.log("starting connection");
      if (state.socket && state.api)
        return;
      const { socket: socket2, api: api2, serverStore } = connection();
      dispatch("socket", socket2);
      dispatch("api", api2);
      dispatch("serverStore", serverStore);
      if (socket2.connected)
        socket2.signal("signal-connect");
      socket2.on("ready", () => {
        socket2.signal("signal-connect");
      });
      socket2.on("signal-connect", (settings) => {
        console.log("settings", settings);
        state.notify.info("connections ready");
      });
      socket2.on("folder", ({ items, page: page2, total }) => {
        dispatch("pagination", new Pagination({ total, page: page2 }));
        if (page2 === 1) {
          commit("folder", items || []);
        } else {
          state.folder.update((folder) => [...folder, ...items || []]);
        }
        commit("loading", false);
      });
      socket2.on("notify-danger", async (msg) => {
        state.notify.danger(msg, 1e4);
      });
      socket2.on("notify-info", async (msg) => {
        state.notify.info(msg);
      });
      socket2.on("notify-warn", async (msg) => {
        state.notify.warning(msg, 5e3);
      });
      socket2.on("notify-success", async (msg) => {
        state.notify.success(msg);
      });
      socket2.on("child-process:spawn", ({ pid, cm }) => {
        state.notify.info(`child-process:${cm} spawning with PID: ${pid}`);
      });
      socket2.on("child-process:exit", (msg) => {
        state.notify.info(msg);
      });
      socket2.on("child-process:killed", (msg) => {
        state.notify.info(msg);
      });
      socket2.on("storage-updated", (_dkey) => {
        const dkey = state.dkey.get();
        if (dkey === dkey) {
          const dir = g("dirs", dkey, true);
          const storage = dkey !== "fs" ? "drive" : "fs";
          dispatch("open", { dir, dkey, storage });
        }
      });
      serverStore.subscribe((data) => {
        console.log("server-store", data);
      });
    }
  }
};
var store = StoreX([main, prompt, socket], { mutation: "", action: "", getter: "" });
var contextMenu_svelte_svelte_type_style_lang = ".disabled.svelte-5c17ev button.svelte-5c17ev{--tw-text-opacity:1;color:rgba(209,213,219,var(--tw-text-opacity));cursor:not-allowed}.dark .disabled.svelte-5c17ev button.svelte-5c17ev{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.disabled.svelte-5c17ev.svelte-5c17ev:hover{background-color:transparent!important}";
const css$6 = {
  code: ".disabled.svelte-5c17ev button.svelte-5c17ev{--tw-text-opacity:1;color:rgba(209,213,219,var(--tw-text-opacity));cursor:not-allowed}.dark .disabled.svelte-5c17ev button.svelte-5c17ev{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.disabled.svelte-5c17ev.svelte-5c17ev:hover{background-color:transparent!important}",
  map: `{"version":3,"file":"context-menu.svelte","sources":["context-menu.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { scale, fade } from 'svelte/transition';\\nimport { backOut, quadIn } from 'svelte/easing';\\nimport { browser } from '$app/env';\\nimport { navigating } from '$app/stores';\\nimport store from '$store';\\nimport { onMount } from 'svelte';\\n;\\nconst menuItems = store.g('context_menu');\\nconst position = store.g('pos'); //{clientX, clientY}\\nlet cls = '';\\nexport { cls as class };\\n$: pos = $position || { x: 0, y: 0 };\\n// let menu;\\nconst hideMenu = (ev) => {\\n    // console.log('hidemenu', ev, ev.keyCode);\\n    if (ev.keyCode === 27 || ev.type !== 'keyup') {\\n        $menuItems = [];\\n    }\\n};\\n$: if (navigating) {\\n    $menuItems = [];\\n}\\nlet main;\\nif (browser) {\\n    main = document.querySelector('div#main');\\n}\\nconst getLimits = (m) => {\\n    const l1 = (innerWidth - m) / 2;\\n    const l2 = (innerWidth + m) / 2;\\n    return { l1, l2 };\\n};\\nconst menuAction = (menu) => {\\n    /**\\n     * Positions the menu properly.\\n     *\\n     * @param {Object} { x: number, y: number };\\n     */\\n    if (!main)\\n        main = document.querySelector('div#main');\\n    const parent = document.getElementById('file-manager');\\n    let dimention = { x: 0, y: 0 };\\n    let menuPos = { x: 0, y: 0 };\\n    dimention.x = menu.offsetWidth;\\n    dimention.y = menu.offsetHeight;\\n    const parentWidth = parent.offsetWidth;\\n    const parentHeight = window.innerHeight;\\n    //X\\n    const limits = getLimits(parentWidth);\\n    if (pos.x + 3 + 200 < limits.l2) {\\n        // console.log('x==>', limits.l2);\\n        menuPos.x = pos.x + 3;\\n    }\\n    else if (limits.l1 < pos.x - 3 - 200) {\\n        // console.log('x<==', limits.l1);\\n        menuPos.x = pos.x - 3 - 200;\\n    }\\n    // else console.log('limits', limits);\\n    //Y\\n    if (pos.y - 5 - dimention.y > 50) {\\n        // console.log('y=UP');\\n        menuPos.y = pos.y - 5 - dimention.y;\\n    }\\n    else if (parentHeight > pos.y + 5 + dimention.y) {\\n        // console.log('y=DOWN');\\n        menuPos.y = Math.max(pos.y + 5, 50);\\n    }\\n    menu.style.left = menuPos.x + 'px';\\n    menu.style.top = menuPos.y + 'px';\\n    main.addEventListener('click', hideMenu);\\n    window.addEventListener('keyup', hideMenu);\\n    window.addEventListener('resize', hideMenu);\\n};\\nonMount(() => {\\n    return () => {\\n        // console.log('cleaningg up context menu');\\n        window.removeEventListener('keyup', hideMenu);\\n        window.removeEventListener('resize', hideMenu);\\n        main.removeEventListener('click', hideMenu);\\n    };\\n});\\n$: hidden = (($menuItems === null || $menuItems === void 0 ? void 0 : $menuItems.length) || 0) === 0;\\n// $: console.log('menuItems', $menuItems);\\n<\/script>\\n\\n{#key pos}\\n\\t<div\\n\\t\\tuse:menuAction\\n\\t\\ttransition:fade={{ delay: 100, duration: 200 }}\\n\\t\\tclass:hidden\\n\\t\\tid=\\"context-menu__view\\"\\n\\t\\tclass=\\" fixed z-20 {cls}\\"\\n\\t>\\n\\t\\t<div\\n\\t\\t\\tin:scale={{ delay: 100, start: 0.8, easing: backOut, duration: 250 }}\\n\\t\\t\\tout:scale={{ start: 0.9, easing: quadIn, duration: 200 }}\\n\\t\\t\\tclass=\\"flex p-2 bg-white dark:bg-gray-700 bg-opacity-95 dark:bg-opacity-95  flex-col min-w-[200px] min-h-[200px] rounded-md shadow-2xl gap-3 md:gap-4 text-gray-800 dark:text-blue-200\\"\\n\\t\\t>\\n\\t\\t\\t{#each $menuItems as { name, action, options,disabled=false, hidden=false } (name)}\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"hover:bg-gray-200 dark:hover:bg-gray-500 px-1 rounded\\"\\n\\t\\t\\t\\t\\tclass:disabled\\n\\t\\t\\t\\t\\tclass:hidden\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\t{disabled}\\n\\t\\t\\t\\t\\t\\ton:click={action()}\\n\\t\\t\\t\\t\\t\\tclass=\\"block text-left w-full text-xl text-gray-900 dark:text-blue-300 capitalize\\"\\n\\t\\t\\t\\t\\t\\t>{name}</button\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t</div>\\n{/key}\\n\\n<style lang=\\"postcss\\">.disabled button{--tw-text-opacity:1;color:rgba(209,213,219,var(--tw-text-opacity));cursor:not-allowed}:global(.dark) .disabled button{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.disabled:hover{background-color:transparent!important}</style>\\n"],"names":[],"mappings":"AAmHsB,uBAAS,CAAC,oBAAM,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,OAAO,WAAW,CAAC,AAAQ,KAAK,AAAC,CAAC,uBAAS,CAAC,oBAAM,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,qCAAS,MAAM,CAAC,iBAAiB,WAAW,UAAU,CAAC"}`
};
const Context_menu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let hidden;
  let $$unsubscribe_position;
  let $menuItems, $$unsubscribe_menuItems;
  const menuItems = store.g("context_menu");
  $$unsubscribe_menuItems = subscribe(menuItems, (value) => $menuItems = value);
  const position = store.g("pos");
  $$unsubscribe_position = subscribe(position, (value) => value);
  let { class: cls = "" } = $$props;
  const hideMenu = (ev) => {
    if (ev.keyCode === 27 || ev.type !== "keyup") {
      set_store_value(menuItems, $menuItems = [], $menuItems);
    }
  };
  let main2;
  onMount(() => {
    return () => {
      window.removeEventListener("keyup", hideMenu);
      window.removeEventListener("resize", hideMenu);
      main2.removeEventListener("click", hideMenu);
    };
  });
  if ($$props.class === void 0 && $$bindings.class && cls !== void 0)
    $$bindings.class(cls);
  $$result.css.add(css$6);
  {
    if (navigating) {
      set_store_value(menuItems, $menuItems = [], $menuItems);
    }
  }
  hidden = (($menuItems === null || $menuItems === void 0 ? void 0 : $menuItems.length) || 0) === 0;
  $$unsubscribe_position();
  $$unsubscribe_menuItems();
  return `<div id="${"context-menu__view"}" class="${[" fixed z-20 " + escape$1(cls) + " svelte-5c17ev", hidden ? "hidden" : ""].join(" ").trim()}"><div class="${"flex p-2 bg-white dark:bg-gray-700 bg-opacity-95 dark:bg-opacity-95  flex-col min-w-[200px] min-h-[200px] rounded-md shadow-2xl gap-3 md:gap-4 text-gray-800 dark:text-blue-200"}">${each($menuItems, ({ name, action, options: options2, disabled = false, hidden: hidden2 = false }) => `<div class="${[
    "hover:bg-gray-200 dark:hover:bg-gray-500 px-1 rounded svelte-5c17ev",
    (disabled ? "disabled" : "") + " " + (hidden2 ? "hidden" : "")
  ].join(" ").trim()}"><button ${disabled ? "disabled" : ""} class="${"block text-left w-full text-xl text-gray-900 dark:text-blue-300 capitalize svelte-5c17ev"}">${escape$1(name)}</button>
				</div>`)}</div></div>`;
});
var tailwind = "/*! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com*//*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}*{--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}.visible{visibility:visible}.fixed{position:fixed}.relative{position:relative}.sticky{position:sticky}.top-0{top:0}.top-\\[7\\%\\]{top:7%}.z-20{z-index:20}.z-50{z-index:50}.z-10{z-index:10}.m-auto{margin:auto}.mx-1{margin-left:.25rem;margin-right:.25rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-2{margin-left:.5rem;margin-right:.5rem}.mt-2{margin-top:.5rem}.mt-1{margin-top:.25rem}.mr-1{margin-right:.25rem}.mb-1{margin-bottom:.25rem}.ml-6{margin-left:1.5rem}.ml-1{margin-left:.25rem}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.table{display:table}.grid{display:grid}.hidden{display:none}.h-24{height:6rem}.h-screen{height:100vh}.h-auto{height:auto}.h-full{height:100%}.h-1{height:.25rem}.h-6{height:1.5rem}.max-h-screen{max-height:100vh}.min-h-\\[200px\\]{min-height:200px}.min-h-screen{min-height:100vh}.w-full{width:100%}.w-36{width:9rem}.w-screen{width:100vw}.w-96{width:24rem}.w-6{width:1.5rem}.min-w-\\[200px\\]{min-width:200px}.max-w-full{max-width:100%}.flex-grow{flex-grow:1}.border-collapse{border-collapse:collapse}.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;user-select:none}.resize{resize:both}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.flex-wrap{flex-wrap:wrap}.place-items-center{place-items:center}.items-center{align-items:center}.justify-between{justify-content:space-between}.justify-center{justify-content:center}.justify-around{justify-content:space-around}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-1{gap:.25rem}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rounded{border-radius:.25rem}.rounded-md{border-radius:.375rem}.rounded-sm{border-radius:.125rem}.rounded-\\[3px\\]{border-radius:3px}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.border{border-width:1px}.border-2{border-width:2px}.border-\\[\\.3px\\]{border-width:.3px}.border-t-2{border-top-width:2px}.border-b-2{border-bottom-width:2px}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity:1;border-color:rgba(209,213,219,var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgba(156,163,175,var(--tw-border-opacity))}.border-red-500{--tw-border-opacity:1;border-color:rgba(239,68,68,var(--tw-border-opacity))}.border-blue-500{--tw-border-opacity:1;border-color:rgba(59,130,246,var(--tw-border-opacity))}.border-gray-500{--tw-border-opacity:1;border-color:rgba(107,114,128,var(--tw-border-opacity))}.border-gray-600{--tw-border-opacity:1;border-color:rgba(75,85,99,var(--tw-border-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgba(219,234,254,var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity:1;background-color:rgba(239,68,68,var(--tw-bg-opacity))}.bg-blue-600{--tw-bg-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-red-200{--tw-bg-opacity:1;background-color:rgba(254,202,202,var(--tw-bg-opacity))}.bg-green-200{--tw-bg-opacity:1;background-color:rgba(167,243,208,var(--tw-bg-opacity))}.bg-blue-200{--tw-bg-opacity:1;background-color:rgba(191,219,254,var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-opacity-95{--tw-bg-opacity:0.95}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.from-green-400{--tw-gradient-from:#34d399;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(52,211,153,0))}.to-blue-500{--tw-gradient-to:#3b82f6}.p-2{padding:.5rem}.p-1{padding:.25rem}.p-3{padding:.75rem}.p-4{padding:1rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-4{padding-left:1rem;padding-right:1rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.pt-1{padding-top:.25rem}.pt-10{padding-top:2.5rem}.pb-1{padding-bottom:.25rem}.text-left{text-align:left}.text-center{text-align:center}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-base{font-size:1rem;line-height:1.5rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-5xl{font-size:3rem;line-height:1}.font-semibold{font-weight:600}.font-bold{font-weight:700}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.text-blue-500{--tw-text-opacity:1;color:rgba(59,130,246,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgba(17,24,39,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity:1;color:rgba(209,213,219,var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgba(185,28,28,var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgba(4,120,87,var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgba(29,78,216,var(--tw-text-opacity))}.text-blue-400{--tw-text-opacity:1;color:rgba(96,165,250,var(--tw-text-opacity))}.text-blue-50{--tw-text-opacity:1;color:rgba(239,246,255,var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06)}.shadow,.shadow-2xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgba(0,0,0,0.25)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px rgba(0,0,0,0.06)}.shadow-md,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,0.05)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-blue-200{--tw-ring-opacity:1;--tw-ring-color:rgba(191,219,254,var(--tw-ring-opacity))}.ring-blue-500{--tw-ring-opacity:1;--tw-ring-color:rgba(59,130,246,var(--tw-ring-opacity))}.ring-blue-400{--tw-ring-opacity:1;--tw-ring-color:rgba(96,165,250,var(--tw-ring-opacity))}.transition{transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration,.transition{transition-duration:.15s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}.hover\\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.hover\\:bg-gray-400:hover{--tw-bg-opacity:1;background-color:rgba(156,163,175,var(--tw-bg-opacity))}.hover\\:text-red-600:hover{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity))}.hover\\:text-blue-600:hover{--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity))}.hover\\:opacity-80:hover{opacity:.8}.hover\\:ring:hover{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.hover\\:ring-red-300:hover{--tw-ring-opacity:1;--tw-ring-color:rgba(252,165,165,var(--tw-ring-opacity))}.hover\\:ring-blue-300:hover{--tw-ring-opacity:1;--tw-ring-color:rgba(147,197,253,var(--tw-ring-opacity))}.focus\\:bg-gray-50:focus{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.active\\:bg-red-300:active{--tw-bg-opacity:1;background-color:rgba(252,165,165,var(--tw-bg-opacity))}.active\\:bg-blue-300:active{--tw-bg-opacity:1;background-color:rgba(147,197,253,var(--tw-bg-opacity))}.active\\:text-blue-500:active{--tw-text-opacity:1;color:rgba(59,130,246,var(--tw-text-opacity))}.active\\:text-blue-400:active{--tw-text-opacity:1;color:rgba(96,165,250,var(--tw-text-opacity))}.active\\:ring:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.active\\:ring-1:active,.active\\:ring:active{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.active\\:ring-1:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.active\\:ring-4:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.active\\:ring-blue-300:active{--tw-ring-opacity:1;--tw-ring-color:rgba(147,197,253,var(--tw-ring-opacity))}.group:hover .group-hover\\:block{display:block}.group:hover .group-hover\\:bg-gray-300{--tw-bg-opacity:1;background-color:rgba(209,213,219,var(--tw-bg-opacity))}.dark .dark\\:border-t-0{border-top-width:0}.dark .dark\\:border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.dark .dark\\:bg-gray-600{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgba(55,65,81,var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgba(31,41,55,var(--tw-bg-opacity))}.dark .dark\\:bg-opacity-95{--tw-bg-opacity:0.95}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.dark .dark\\:text-blue-200{--tw-text-opacity:1;color:rgba(191,219,254,var(--tw-text-opacity))}.dark .dark\\:text-blue-300{--tw-text-opacity:1;color:rgba(147,197,253,var(--tw-text-opacity))}.dark .dark\\:text-blue-100{--tw-text-opacity:1;color:rgba(219,234,254,var(--tw-text-opacity))}.dark .dark\\:text-gray-200{--tw-text-opacity:1;color:rgba(229,231,235,var(--tw-text-opacity))}.dark .dark\\:ring-gray-600{--tw-ring-opacity:1;--tw-ring-color:rgba(75,85,99,var(--tw-ring-opacity))}.dark .dark\\:ring-gray-400{--tw-ring-opacity:1;--tw-ring-color:rgba(156,163,175,var(--tw-ring-opacity))}.dark .dark\\:ring-gray-500{--tw-ring-opacity:1;--tw-ring-color:rgba(107,114,128,var(--tw-ring-opacity))}.dark .dark\\:hover\\:bg-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(107,114,128,var(--tw-bg-opacity))}.dark .dark\\:hover\\:bg-gray-600:hover{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}.dark .dark\\:active\\:text-blue-300:active{--tw-text-opacity:1;color:rgba(147,197,253,var(--tw-text-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-gray-500{--tw-bg-opacity:1;background-color:rgba(107,114,128,var(--tw-bg-opacity))}@media (min-width:768px){.md\\:top-\\[13\\%\\]{top:13%}.md\\:ml-0{margin-left:0}.md\\:block{display:block}.md\\:flex{display:flex}.md\\:h-8{height:2rem}.md\\:w-8{width:2rem}.md\\:flex-row{flex-direction:row}.md\\:justify-between{justify-content:space-between}.md\\:gap-4{gap:1rem}.md\\:p-4{padding:1rem}.md\\:px-10{padding-left:2.5rem;padding-right:2.5rem}.md\\:text-7xl{font-size:4.5rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:p-6{padding:1.5rem}}";
var app = '@font-face{font-display:swap;font-family:Fira Mono;font-style:normal;font-weight:400;src:url(__VITE_ASSET__b3140dd3__) format("woff2"),url(__VITE_ASSET__0d19eb5d__) format("woff");unicode-range:U+0460-052f,U+1c80-1c88,U+20b4,U+2de0-2dff,U+a640-a69f,U+fe2e-fe2f}@font-face{font-display:swap;font-family:Fira Mono;font-style:normal;font-weight:400;src:url(__VITE_ASSET__046b609f__) format("woff2"),url(__VITE_ASSET__0d19eb5d__) format("woff");unicode-range:U+0400-045f,U+0490-0491,U+04b0-04b1,U+2116}@font-face{font-display:swap;font-family:Fira Mono;font-style:normal;font-weight:400;src:url(__VITE_ASSET__8659ae46__) format("woff2"),url(__VITE_ASSET__0d19eb5d__) format("woff");unicode-range:U+1f??}@font-face{font-display:swap;font-family:Fira Mono;font-style:normal;font-weight:400;src:url(__VITE_ASSET__1f8b3a07__) format("woff2"),url(__VITE_ASSET__0d19eb5d__) format("woff");unicode-range:U+0370-03ff}@font-face{font-display:swap;font-family:Fira Mono;font-style:normal;font-weight:400;src:url(__VITE_ASSET__b6331a25__) format("woff2"),url(__VITE_ASSET__0d19eb5d__) format("woff");unicode-range:U+0100-024f,U+0259,U+1e??,U+2020,U+20a0-20ab,U+20ad-20cf,U+2113,U+2c60-2c7f,U+a720-a7ff}@font-face{font-display:swap;font-family:Fira Mono;font-style:normal;font-weight:400;src:url(__VITE_ASSET__a2f9dbe8__) format("woff2"),url(__VITE_ASSET__0d19eb5d__) format("woff");unicode-range:U+00??,U+0131,U+0152-0153,U+02bb-02bc,U+02c6,U+02da,U+02dc,U+2000-206f,U+2074,U+20ac,U+2122,U+2191,U+2193,U+2212,U+2215,U+feff,U+fffd}\n/*! tailwindcss v2.1.4 | MIT License | https://tailwindcss.com*/\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}*{--tw-shadow:0 0 #0000;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000}.visible{visibility:visible}.fixed{position:fixed}.relative{position:relative}.sticky{position:sticky}.top-0{top:0}.top-\\[7\\%\\]{top:7%}.z-20{z-index:20}.z-50{z-index:50}.z-10{z-index:10}.m-auto{margin:auto}.mx-1{margin-left:.25rem;margin-right:.25rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-2{margin-left:.5rem;margin-right:.5rem}.mt-2{margin-top:.5rem}.mt-1{margin-top:.25rem}.mr-1{margin-right:.25rem}.mb-1{margin-bottom:.25rem}.ml-6{margin-left:1.5rem}.ml-1{margin-left:.25rem}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.table{display:table}.grid{display:grid}.hidden{display:none}.h-24{height:6rem}.h-screen{height:100vh}.h-auto{height:auto}.h-full{height:100%}.h-1{height:.25rem}.h-6{height:1.5rem}.max-h-screen{max-height:100vh}.min-h-\\[200px\\]{min-height:200px}.min-h-screen{min-height:100vh}.w-full{width:100%}.w-36{width:9rem}.w-screen{width:100vw}.w-96{width:24rem}.w-6{width:1.5rem}.min-w-\\[200px\\]{min-width:200px}.max-w-full{max-width:100%}.flex-grow{flex-grow:1}.border-collapse{border-collapse:collapse}.transform{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.resize{resize:both}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.flex-wrap{flex-wrap:wrap}.place-items-center{place-items:center}.items-center{align-items:center}.justify-between{justify-content:space-between}.justify-center{justify-content:center}.justify-around{justify-content:space-around}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-1{gap:.25rem}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rounded{border-radius:.25rem}.rounded-md{border-radius:.375rem}.rounded-sm{border-radius:.125rem}.rounded-\\[3px\\]{border-radius:3px}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.border{border-width:1px}.border-2{border-width:2px}.border-\\[\\.3px\\]{border-width:.3px}.border-t-2{border-top-width:2px}.border-b-2{border-bottom-width:2px}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity:1;border-color:rgba(209,213,219,var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgba(156,163,175,var(--tw-border-opacity))}.border-red-500{--tw-border-opacity:1;border-color:rgba(239,68,68,var(--tw-border-opacity))}.border-blue-500{--tw-border-opacity:1;border-color:rgba(59,130,246,var(--tw-border-opacity))}.border-gray-500{--tw-border-opacity:1;border-color:rgba(107,114,128,var(--tw-border-opacity))}.border-gray-600{--tw-border-opacity:1;border-color:rgba(75,85,99,var(--tw-border-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgba(219,234,254,var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity:1;background-color:rgba(239,68,68,var(--tw-bg-opacity))}.bg-blue-600{--tw-bg-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-red-200{--tw-bg-opacity:1;background-color:rgba(254,202,202,var(--tw-bg-opacity))}.bg-green-200{--tw-bg-opacity:1;background-color:rgba(167,243,208,var(--tw-bg-opacity))}.bg-blue-200{--tw-bg-opacity:1;background-color:rgba(191,219,254,var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-opacity-95{--tw-bg-opacity:0.95}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.from-green-400{--tw-gradient-from:#34d399;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(52,211,153,0))}.to-blue-500{--tw-gradient-to:#3b82f6}.p-2{padding:.5rem}.p-1{padding:.25rem}.p-3{padding:.75rem}.p-4{padding:1rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-4{padding-left:1rem;padding-right:1rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.pt-1{padding-top:.25rem}.pt-10{padding-top:2.5rem}.pb-1{padding-bottom:.25rem}.text-left{text-align:left}.text-center{text-align:center}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-base{font-size:1rem;line-height:1.5rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-5xl{font-size:3rem;line-height:1}.font-semibold{font-weight:600}.font-bold{font-weight:700}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.text-blue-500{--tw-text-opacity:1;color:rgba(59,130,246,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgba(17,24,39,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity:1;color:rgba(209,213,219,var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgba(185,28,28,var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgba(4,120,87,var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgba(29,78,216,var(--tw-text-opacity))}.text-blue-400{--tw-text-opacity:1;color:rgba(96,165,250,var(--tw-text-opacity))}.text-blue-50{--tw-text-opacity:1;color:rgba(239,246,255,var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0,0.06)}.shadow,.shadow-2xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgba(0,0,0,0.25)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px rgba(0,0,0,0.06)}.shadow-md,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,0.05)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-blue-200{--tw-ring-opacity:1;--tw-ring-color:rgba(191,219,254,var(--tw-ring-opacity))}.ring-blue-500{--tw-ring-opacity:1;--tw-ring-color:rgba(59,130,246,var(--tw-ring-opacity))}.ring-blue-400{--tw-ring-opacity:1;--tw-ring-color:rgba(96,165,250,var(--tw-ring-opacity))}.transition{transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration,.transition{transition-duration:.15s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}:root{--font-mono:"Fira Mono",monospace;--pure-white:#fff;--primary-color:#b9c6d2;--secondary-color:#d0dde9;--tertiary-color:#edf0f8;--accent-color:#ff3e00;--heading-color:rgba(0,0,0,0.7);--text-color:#444;--background-without-opacity:hsla(0,0%,100%,0.7);--column-width:42rem;--column-margin-top:4rem;font-family:Arial,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif}body{background-color:var(--primary-color);background:linear-gradient(180deg,var(--primary-color) 0,var(--secondary-color) 10.45%,var(--tertiary-color) 41.35%);margin:0;min-height:100vh}body.dark{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}body:before{background:radial-gradient(50% 50% at 50% 50%,var(--pure-white) 0,hsla(0,0%,100%,0) 100%);content:"";height:100vh;left:10vw;opacity:.05;position:absolute;top:0;width:80vw;z-index:-1}#svelte{display:flex;flex-direction:column;min-height:100vh}h1,h2,p{color:var(--heading-color);font-weight:400}p{line-height:1.5}h1{font-size:2rem;margin-bottom:0 0 1em 0;text-align:center}h2{font-size:1rem}pre{background-color:hsla(0,0%,100%,.45);border-radius:3px;box-shadow:2px 2px 6px rgb(255 255 255/25%);color:var(--text-color);font-family:var(--font-mono);font-size:16px;overflow-x:auto;padding:.5em}button,input{font-family:inherit;font-size:inherit}button:focus:not(:focus-visible){outline:none}@media (min-width:720px){h1{font-size:2.4rem}}.anchor{--tw-text-opacity:1;color:rgba(30,64,175,var(--tw-text-opacity));display:inline-block;position:relative;transition-duration:.15s;transition-duration:.4s;transition-property:background-color,border-color,color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(0,0,.2,1)}.dark .anchor{--tw-text-opacity:1;color:rgba(239,246,255,var(--tw-text-opacity))}.button:hover{text-decoration:none;transform:scale(1.2)}.button:active{transform:scale(1);transition:none}.anchor:after{--tw-border-opacity:1;border-color:rgba(37,99,235,var(--tw-border-opacity));border-radius:.125rem;left:0;position:absolute;right:100%}.dark .anchor:after{--tw-border-opacity:1;border-color:rgba(191,219,254,var(--tw-border-opacity))}.anchor:after{border-top:4px solid;content:"";transition:border-color .4s ease-out,right .4s cubic-bezier(0,.5,0,1)}.tooltip{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-translate-y:-.25em;--tw-bg-opacity:1;--tw-text-opacity:1;background-color:rgba(156,163,175,var(--tw-bg-opacity));border-radius:.125rem;border-width:2px;bottom:2em;color:rgba(30,64,175,var(--tw-text-opacity));font-size:.7em;left:calc(50% - 8em);opacity:0;overflow:hidden;padding:.25em .5em;text-align:center;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transition:visibility 0s .5s,opacity .2s ease-out,transform .5s cubic-bezier(0,1,.5,1);visibility:hidden;width:16em;z-index:10}.tooltip,.tooltip:after{border-style:solid;position:absolute}.tooltip:after{--tw-border-opacity:1;border-color:rgba(191,219,254,var(--tw-border-opacity));border-radius:0;border-width:.2em .2em 0;bottom:-.2em;content:"";left:calc(50% - .2em);width:0}.anchor-tooltip:hover .tooltip{opacity:1;transform:none;transition:opacity .2s ease-out,transform .5s cubic-bezier(0,1,.5,1);visibility:visible}.anchor.active,.anchor:hover{--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity));text-decoration:none}.dark .anchor.active,.dark .anchor:hover{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.anchor.active:after,.anchor:hover:after{--tw-border-opacity:1;border-color:rgba(37,99,235,var(--tw-border-opacity));right:0}.dark .anchor.active:after,.dark .anchor:hover:after{--tw-border-opacity:1;border-color:rgba(219,234,254,var(--tw-border-opacity))}.list-unstyled{list-style:none;padding-left:0}.lead{font-size:1.25rem}.lead,.lead2{font-weight:300}.lead2,.lead3{font-size:1.5rem}.lead3{font-weight:500}.nav-link{display:block;padding:.5rem 1rem;text-decoration:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out}.nav-link.disabled{color:#6c757d;cursor:default;pointer-events:none}.form-login{margin:auto;max-width:330px;padding:15px;width:100%}*{box-sizing:border-box}.h-shadow{box-shadow:none}.h-shadow:hover,.nh-shadow{box-shadow:0 .1rem .4rem rgba(0,0,0,.15)}.nh-shadow:hover{box-shadow:none!important}.sm-nav-link{color:#343a40;font-weight:400}.sticky-top{position:sticky;top:0;z-index:11}.card-2{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}.sidebar-swipe-applied.sb-opened :first-child{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.dark .sidebar-swipe-applied.sb-opened :first-child{--tw-bg-opacity:1;background-color:rgba(107,114,128,var(--tw-bg-opacity))}.nav-intersecting{--tw-bg-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px rgba(0,0,0,0.06);background-color:rgba(255,255,255,var(--tw-bg-opacity));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.dark .nav-intersecting{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}#svelte-sidebar-swipe{z-index:20}@media (min-width:768px){#svelte-sidebar-swipe{display:none;padding-left:2.5rem;padding-right:2.5rem}}.desktop{display:none}@media (min-width:768px){.desktop{display:block}}.mobile{display:block}@media (min-width:768px){.mobile{display:none}}body{overflow-x:hidden;transition-duration:.15s;transition-property:background-color,border-color,color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1)}.btn{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;border-radius:.25rem;padding:.25rem .75rem;transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.btn:active{--tw-scale-x:.95;--tw-scale-y:.95;opacity:.95}.hover\\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.hover\\:bg-gray-400:hover{--tw-bg-opacity:1;background-color:rgba(156,163,175,var(--tw-bg-opacity))}.hover\\:text-red-600:hover{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity))}.hover\\:text-blue-600:hover{--tw-text-opacity:1;color:rgba(37,99,235,var(--tw-text-opacity))}.hover\\:opacity-80:hover{opacity:.8}.hover\\:ring:hover{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.hover\\:ring-red-300:hover{--tw-ring-opacity:1;--tw-ring-color:rgba(252,165,165,var(--tw-ring-opacity))}.hover\\:ring-blue-300:hover{--tw-ring-opacity:1;--tw-ring-color:rgba(147,197,253,var(--tw-ring-opacity))}.focus\\:bg-gray-50:focus{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.active\\:bg-red-300:active{--tw-bg-opacity:1;background-color:rgba(252,165,165,var(--tw-bg-opacity))}.active\\:bg-blue-300:active{--tw-bg-opacity:1;background-color:rgba(147,197,253,var(--tw-bg-opacity))}.active\\:text-blue-500:active{--tw-text-opacity:1;color:rgba(59,130,246,var(--tw-text-opacity))}.active\\:text-blue-400:active{--tw-text-opacity:1;color:rgba(96,165,250,var(--tw-text-opacity))}.active\\:ring:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.active\\:ring-1:active,.active\\:ring:active{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.active\\:ring-1:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.active\\:ring-4:active{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.active\\:ring-blue-300:active{--tw-ring-opacity:1;--tw-ring-color:rgba(147,197,253,var(--tw-ring-opacity))}.group:hover .group-hover\\:block{display:block}.group:hover .group-hover\\:bg-gray-300{--tw-bg-opacity:1;background-color:rgba(209,213,219,var(--tw-bg-opacity))}.dark .dark\\:border-t-0{border-top-width:0}.dark .dark\\:border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.dark .dark\\:bg-gray-600{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgba(55,65,81,var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgba(31,41,55,var(--tw-bg-opacity))}.dark .dark\\:bg-opacity-95{--tw-bg-opacity:0.95}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.dark .dark\\:text-blue-200{--tw-text-opacity:1;color:rgba(191,219,254,var(--tw-text-opacity))}.dark .dark\\:text-blue-300{--tw-text-opacity:1;color:rgba(147,197,253,var(--tw-text-opacity))}.dark .dark\\:text-blue-100{--tw-text-opacity:1;color:rgba(219,234,254,var(--tw-text-opacity))}.dark .dark\\:text-gray-200{--tw-text-opacity:1;color:rgba(229,231,235,var(--tw-text-opacity))}.dark .dark\\:ring-gray-600{--tw-ring-opacity:1;--tw-ring-color:rgba(75,85,99,var(--tw-ring-opacity))}.dark .dark\\:ring-gray-400{--tw-ring-opacity:1;--tw-ring-color:rgba(156,163,175,var(--tw-ring-opacity))}.dark .dark\\:ring-gray-500{--tw-ring-opacity:1;--tw-ring-color:rgba(107,114,128,var(--tw-ring-opacity))}.dark .dark\\:hover\\:bg-gray-500:hover{--tw-bg-opacity:1;background-color:rgba(107,114,128,var(--tw-bg-opacity))}.dark .dark\\:hover\\:bg-gray-600:hover{--tw-bg-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity))}.dark .dark\\:active\\:text-blue-300:active{--tw-text-opacity:1;color:rgba(147,197,253,var(--tw-text-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-gray-500{--tw-bg-opacity:1;background-color:rgba(107,114,128,var(--tw-bg-opacity))}@media (min-width:768px){.md\\:top-\\[13\\%\\]{top:13%}.md\\:ml-0{margin-left:0}.md\\:block{display:block}.md\\:flex{display:flex}.md\\:h-8{height:2rem}.md\\:w-8{width:2rem}.md\\:flex-row{flex-direction:row}.md\\:justify-between{justify-content:space-between}.md\\:gap-4{gap:1rem}.md\\:p-4{padding:1rem}.md\\:px-10{padding-left:2.5rem;padding-right:2.5rem}.md\\:text-7xl{font-size:4.5rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:p-6{padding:1.5rem}}';
const writable = (value) => {
  const { subscribe: subscribe2, ...methods } = writable$1(value);
  const get = () => {
    let value2;
    subscribe2((val) => {
      value2 = val;
    })();
    return value2;
  };
  return {
    subscribe: subscribe2,
    ...methods,
    get
  };
};
writable(false);
writable(true);
var SideBarSwipe_svelte_svelte_type_style_lang = ".sidebar-swipe-applied{background:rgba(128,98,98,0);display:none;height:100%;overflow-y:overlay;position:fixed;transition:background .5s ease;width:100%}.sidebar-swipe-applied :first-child{min-height:100%}.sidebar-swipe-applied.sb-opened{display:block}";
const css$5 = {
  code: ".sidebar-swipe-applied{background:rgba(128,98,98,0);display:none;height:100%;overflow-y:overlay;position:fixed;transition:background .5s ease;width:100%}.sidebar-swipe-applied :first-child{min-height:100%}.sidebar-swipe-applied.sb-opened{display:block}",
  map: `{"version":3,"file":"SideBarSwipe.svelte","sources":["SideBarSwipe.svelte"],"sourcesContent":["<script>\\n  import sidebar from './actions';\\n  export let style = '';\\n  export let width = '';\\n  export let right = false;\\n  export let id = 'svelte-sidebar-swipe';\\n\\n  export let backdropOpacity;\\n  export let maxScreenWidth;\\n  export let transitionDuration;\\n  export let transitionTimingFunc;\\n\\n  const options = {\\n    maxScreenWidth,\\n    transitionDuration,\\n    backdropOpacity,\\n    transitionTimingFunc,\\n    width,\\n    right,\\n  };\\n  let Class = $$props.class;\\n<\/script>\\n\\n<div {id} use:sidebar={options} class=\\"sidebar-swipe-applied\\">\\n  <nav {style} class={!!Class ? Class : ''}>\\n    <slot />\\n  </nav>\\n</div>\\n\\n<style>:global(.sidebar-swipe-applied){background:rgba(128,98,98,0);display:none;height:100%;overflow-y:overlay;position:fixed;transition:background .5s ease;width:100%}:global(.sidebar-swipe-applied :first-child){min-height:100%}:global(.sidebar-swipe-applied.sb-opened){display:block}</style>\\n"],"names":[],"mappings":"AA6Be,sBAAsB,AAAC,CAAC,WAAW,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,OAAO,IAAI,CAAC,WAAW,OAAO,CAAC,SAAS,KAAK,CAAC,WAAW,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,AAAQ,mCAAmC,AAAC,CAAC,WAAW,IAAI,CAAC,AAAQ,gCAAgC,AAAC,CAAC,QAAQ,KAAK,CAAC"}`
};
const SideBarSwipe = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { style = "" } = $$props;
  let { width = "" } = $$props;
  let { right = false } = $$props;
  let { id = "svelte-sidebar-swipe" } = $$props;
  let { backdropOpacity } = $$props;
  let { maxScreenWidth } = $$props;
  let { transitionDuration } = $$props;
  let { transitionTimingFunc } = $$props;
  let Class = $$props.class;
  if ($$props.style === void 0 && $$bindings.style && style !== void 0)
    $$bindings.style(style);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0)
    $$bindings.width(width);
  if ($$props.right === void 0 && $$bindings.right && right !== void 0)
    $$bindings.right(right);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.backdropOpacity === void 0 && $$bindings.backdropOpacity && backdropOpacity !== void 0)
    $$bindings.backdropOpacity(backdropOpacity);
  if ($$props.maxScreenWidth === void 0 && $$bindings.maxScreenWidth && maxScreenWidth !== void 0)
    $$bindings.maxScreenWidth(maxScreenWidth);
  if ($$props.transitionDuration === void 0 && $$bindings.transitionDuration && transitionDuration !== void 0)
    $$bindings.transitionDuration(transitionDuration);
  if ($$props.transitionTimingFunc === void 0 && $$bindings.transitionTimingFunc && transitionTimingFunc !== void 0)
    $$bindings.transitionTimingFunc(transitionTimingFunc);
  $$result.css.add(css$5);
  return `<div${add_attribute("id", id, 0)} class="${"sidebar-swipe-applied"}"><nav${add_attribute("style", style, 0)}${add_attribute("class", !!Class ? Class : "", 0)}>${slots.default ? slots.default({}) : ``}</nav>
</div>`;
});
const MenuIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { size = "100%" } = $$props;
  let { strokeWidth = 2 } = $$props;
  let { class: customClass = "" } = $$props;
  if (size !== "100%") {
    size = size.slice(-1) === "x" ? size.slice(0, size.length - 1) + "em" : parseInt(size) + "px";
  }
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.strokeWidth === void 0 && $$bindings.strokeWidth && strokeWidth !== void 0)
    $$bindings.strokeWidth(strokeWidth);
  if ($$props.class === void 0 && $$bindings.class && customClass !== void 0)
    $$bindings.class(customClass);
  return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("width", size, 0)}${add_attribute("height", size, 0)} fill="${"none"}" viewBox="${"0 0 24 24"}" stroke="${"currentColor"}"${add_attribute("stroke-width", strokeWidth, 0)} stroke-linecap="${"round"}" stroke-linejoin="${"round"}" class="${"feather feather-menu " + escape$1(customClass)}"><line x1="${"3"}" y1="${"12"}" x2="${"21"}" y2="${"12"}"></line><line x1="${"3"}" y1="${"6"}" x2="${"21"}" y2="${"6"}"></line><line x1="${"3"}" y1="${"18"}" x2="${"21"}" y2="${"18"}"></line></svg>`;
});
var light_mode = "/_app/assets/light_mode.8452037f.svg";
var dark_mode = "/_app/assets/dark_mode.5e889cd7.svg";
var navItems_svelte_svelte_type_style_lang = "@media(min-width:768px){.flex-md-row.svelte-bcyqtg{flex-direction:row!important}}";
const css$4 = {
  code: "@media(min-width:768px){.flex-md-row.svelte-bcyqtg{flex-direction:row!important}}",
  map: `{"version":3,"file":"navItems.svelte","sources":["navItems.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { page } from '$app/stores';\\nimport store from '$store';\\nimport light_mode from '$lib/light_mode.svg';\\nimport dark_mode from '$lib/dark_mode.svg';\\nconst colorScheme = store.state.colorScheme;\\nexport let cls = '';\\n<\/script>\\n\\n<div class=\\"md:flex md:justify-between {cls}\\">\\n\\t<div class=\\"hidden md:block\\">\\n\\t\\t<a href=\\"/\\" sveltekit:prefetch class:active={$page.path === '/'} class=\\"anchor text-3xl\\">Hyp</a>\\n\\t</div>\\n\\t<div class=\\"flex justify-between flex-md-row flex-col\\">\\n\\t\\t{#each ['file-manager', 'chat'] as navLink}\\n\\t\\t\\t<div class=\\"nav-link lead3\\">\\n\\t\\t\\t\\t<a\\n\\t\\t\\t\\t\\tsveltekit:prefetch\\n\\t\\t\\t\\t\\tclass=\\"anchor p-3 capitalize\\"\\n\\t\\t\\t\\t\\tclass:active={$page.path === '/' + navLink}\\n\\t\\t\\t\\t\\thref={\`/\${navLink}\`}>{navLink}</a\\n\\t\\t\\t\\t>\\n\\t\\t\\t</div>\\n\\t\\t{/each}\\n\\t</div>\\n\\t<div>\\n\\t\\t{#if $colorScheme === 'light'}\\n\\t\\t\\t<button\\n\\t\\t\\t\\tclass=\\" p-2 text-blue-500 border rounded-full border-gray-300 hover:bg-gray-400 flex justify-between ml-6 md:ml-0\\"\\n\\t\\t\\t\\ton:click={() => store.commit('setColorScheme', 'dark')}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<img src={dark_mode} alt=\\"dark\\" />\\n\\t\\t\\t\\t<span class=\\"inline-block ml-1\\">dark mode</span>\\n\\t\\t\\t</button>\\n\\t\\t{:else}\\n\\t\\t\\t<button\\n\\t\\t\\t\\tclass=\\"p-2 text-blue-50 border rounded-full dark:bg-gray-800 border-gray-400 dark:hover:bg-gray-600 flex justify-between ml-6 md:ml-0\\"\\n\\t\\t\\t\\ton:click={() => store.commit('setColorScheme', 'light')}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<img src={light_mode} alt=\\"light\\" />\\n\\t\\t\\t\\t<span class=\\"inline-block ml-1\\">light mode</span>\\n\\t\\t\\t</button>\\n\\t\\t{/if}\\n\\t</div>\\n</div>\\n\\n<style lang=\\"postcss\\">@media (min-width:768px){.flex-md-row{flex-direction:row!important}}</style>\\n"],"names":[],"mappings":"AA6CsB,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,0BAAY,CAAC,eAAe,GAAG,UAAU,CAAC,CAAC"}`
};
const NavItems = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  let $colorScheme, $$unsubscribe_colorScheme;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  const colorScheme = store.state.colorScheme;
  $$unsubscribe_colorScheme = subscribe(colorScheme, (value) => $colorScheme = value);
  let { cls = "" } = $$props;
  if ($$props.cls === void 0 && $$bindings.cls && cls !== void 0)
    $$bindings.cls(cls);
  $$result.css.add(css$4);
  $$unsubscribe_page();
  $$unsubscribe_colorScheme();
  return `<div class="${"md:flex md:justify-between " + escape$1(cls) + " svelte-bcyqtg"}"><div class="${"hidden md:block"}"><a href="${"/"}" sveltekit:prefetch class="${["anchor text-3xl", $page.path === "/" ? "active" : ""].join(" ").trim()}">Hyp</a></div>
	<div class="${"flex justify-between flex-md-row flex-col svelte-bcyqtg"}">${each(["file-manager", "chat"], (navLink) => `<div class="${"nav-link lead3"}"><a sveltekit:prefetch class="${["anchor p-3 capitalize", $page.path === "/" + navLink ? "active" : ""].join(" ").trim()}"${add_attribute("href", `/${navLink}`, 0)}>${escape$1(navLink)}</a>
			</div>`)}</div>
	<div>${$colorScheme === "light" ? `<button class="${" p-2 text-blue-500 border rounded-full border-gray-300 hover:bg-gray-400 flex justify-between ml-6 md:ml-0"}"><img${add_attribute("src", dark_mode, 0)} alt="${"dark"}">
				<span class="${"inline-block ml-1"}">dark mode</span></button>` : `<button class="${"p-2 text-blue-50 border rounded-full dark:bg-gray-800 border-gray-400 dark:hover:bg-gray-600 flex justify-between ml-6 md:ml-0"}"><img${add_attribute("src", light_mode, 0)} alt="${"light"}">
				<span class="${"inline-block ml-1"}">light mode</span></button>`}</div>
</div>`;
});
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $$unsubscribe_page();
  return `<div id="${"nav-sm"}" class="${"mobile mb-1 p-2 sticky-top"}"><div class="${"flex justify-between"}"><div><a href="${"/"}" sveltekit:prefetch class="${["btn lead3 anchor", $page.path === "/" ? "active" : ""].join(" ").trim()}">Hyp</a></div>
		<button class="${""}">${validate_component(MenuIcon, "MenuIcon").$$render($$result, { size: "2x", class: "dark:text-blue-100" }, {}, {})}</button></div></div>

${validate_component(SideBarSwipe, "SideBarSwipe").$$render($$result, {
    width: "80",
    backdropOpacity: "0.2",
    maxScreenWidth: "768",
    transitionDuration: "300",
    transitionTimingFunc: "cubic-bezier(0.9, 0.28, 0.08, 1.13)",
    class: "rounded"
  }, {}, {
    default: () => `${validate_component(NavItems, "NavItems").$$render($$result, {}, {}, {})}`
  })}

<div id="${"nav-md"}" class="${"desktop bg-transparent select-none md:px-10 py-2 sticky-top"}">${validate_component(NavItems, "NavItems").$$render($$result, {}, {}, {})}</div>`;
});
const Prompt = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $prompt, $$unsubscribe_prompt;
  const prompt2 = store.state.prompt;
  $$unsubscribe_prompt = subscribe(prompt2, (value) => $prompt = value);
  $$unsubscribe_prompt();
  return `${$prompt.visible ? `<div style="${"background-color: rgba(0,0,0,0.5)"}" class="${" px-1 flex fixed m-auto top-0 items-center select-none justify-center w-screen h-screen"}"><div class="${"w-96 max-w-full rounded-lg h-auto bg-gray-100 px-4"}"><div class="${"p-4 font-semibold text-blue-700"}">${escape$1($prompt.message)}</div>
				<div class="${"border-gray-300 p-4 flex justify-between border-t-1"}"><button class="${"hover:ring active:ring-4 capitalize active:bg-red-300 hover:text-red-600  focus:outline-transparent hover:ring-red-300 border-2 p-2 font-bold rounded-md border-red-500"}">${escape$1($prompt.dismissText)}</button>
					<button class="${"hover:ring active:ring-4 capitalize active:bg-blue-300 hover:text-blue-600  focus:outline-transparent hover:ring-blue-300 border-2 p-2 font-bold rounded-md border-blue-500 hover:opacity-80"}">${escape$1($prompt.acceptText)}</button></div></div></div>` : ``}`;
});
var __layout_svelte_svelte_type_style_lang = "@media(min-width:480px){footer.svelte-2i8okz{padding:40px 0}}";
const css$3 = {
  code: "@media(min-width:480px){footer.svelte-2i8okz{padding:40px 0}}",
  map: `{"version":3,"file":"__layout.svelte","sources":["__layout.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\t/**\\n\\t * @type {import('@sveltejs/kit').Load}\\n\\t */\\n\\texport async function load({ page, fetch, session, context }) {\\n\\t\\tif (browser) {\\n\\t\\t\\tstore.dispatch('startConnection');\\n\\t\\t}\\n\\t\\treturn {};\\n\\t}\\n<\/script>\\n\\n<script lang=\\"ts\\">import { NotificationDisplay } from '@beyonk/svelte-notifications';\\nimport ContextMenu from '$components/context-menu.svelte';\\nimport 'tailwindcss/tailwind.css';\\nimport '$lib/app.css';\\nimport Header from '$components/nav.svelte';\\nimport store from '$store';\\nimport Prompt from '$components/prompt.svelte';\\nimport { dev, browser } from '$app/env';\\nimport { page } from '$app/stores';\\nconst colorScheme = store.g('colorScheme');\\nconst hideFilemenu = store.g('hideFilemenu');\\nimport { InterObserver, NavInterObserver } from '$lib/utils';\\n$: ((theme) => {\\n    if (browser) {\\n        // window['ntfy'] = notifier;\\n        // notifier.danger('hello', 4000);\\n        if (theme === 'dark') {\\n            document.body.classList.add('dark');\\n        }\\n        else {\\n            document.body.classList.remove('dark');\\n        }\\n    }\\n})($colorScheme);\\n// $: console.log('page', $page);\\n<\/script>\\n\\n<Prompt />\\n<div\\n\\tid=\\"main\\"\\n\\tclass=\\"w-full min-h-screen mx-auto flex flex-col justify-between bg-white dark:bg-gray-800 shadow-md select-none\\"\\n>\\n\\t<div class=\\"h-full flex flex-col flex-grow\\">\\n\\t\\t<Header />\\n\\t\\t<div class=\\"w-screen h-1\\" use:NavInterObserver />\\n\\n\\t\\t<!-- <div\\n\\t\\t\\tclass=\\"w-screen h-1\\"\\n\\t\\t\\tuse:InterObserver={{\\n\\t\\t\\t\\tisIntersecting: () => {\\n\\t\\t\\t\\t\\t$hideFilemenu = !$hideFilemenu;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}}\\n\\t\\t/> -->\\n\\t\\t<slot />\\n\\t</div>\\n</div>\\n\\n<footer\\n\\tclass=\\"bg-gradient-to-r from-green-400 to-blue-500 flex flex-col justify-center items-center p-4 \\"\\n>\\n\\t<!-- hmm -->\\n</footer>\\n\\n<NotificationDisplay />\\n{#if $page.path === '/file-manager'}\\n\\t<ContextMenu />\\n{/if}\\n\\n<style>@media (min-width:480px){footer{padding:40px 0}}</style>\\n"],"names":[],"mappings":"AAuEO,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,oBAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC"}`
};
async function load$5({ page: page2, fetch, session, context }) {
  return {};
}
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_colorScheme;
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  const colorScheme = store.g("colorScheme");
  $$unsubscribe_colorScheme = subscribe(colorScheme, (value) => value);
  store.g("hideFilemenu");
  $$result.css.add(css$3);
  $$unsubscribe_colorScheme();
  $$unsubscribe_page();
  return `${validate_component(Prompt, "Prompt").$$render($$result, {}, {}, {})}
<div id="${"main"}" class="${"w-full min-h-screen mx-auto flex flex-col justify-between bg-white dark:bg-gray-800 shadow-md select-none"}"><div class="${"h-full flex flex-col flex-grow"}">${validate_component(Nav, "Header").$$render($$result, {}, {}, {})}
		<div class="${"w-screen h-1"}"></div>

		
		${slots.default ? slots.default({}) : ``}</div></div>

<footer class="${"bg-gradient-to-r from-green-400 to-blue-500 flex flex-col justify-center items-center p-4  svelte-2i8okz"}"></footer>

${validate_component(Notifications, "NotificationDisplay").$$render($$result, {}, {}, {})}
${$page.path === "/file-manager" ? `${validate_component(Context_menu, "ContextMenu").$$render($$result, {}, {}, {})}` : ``}`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout,
  load: load$5
});
function load$4({ error: error2, status }) {
  return { props: { error: error2, status } };
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { status } = $$props;
  let { error: error2 } = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape$1(status)}</h1>

<p>${escape$1(error2.message)}</p>


${error2.stack ? `<pre>${escape$1(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Error$1,
  load: load$4
});
const Storage_select = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let drives;
  let $serverStore, $$unsubscribe_serverStore;
  let $dkey, $$unsubscribe_dkey;
  const serverStore = store.g("serverStore");
  $$unsubscribe_serverStore = subscribe(serverStore, (value) => $serverStore = value);
  const dkey = store.g("dkey");
  $$unsubscribe_dkey = subscribe(dkey, (value) => $dkey = value);
  drives = [...($serverStore == null ? void 0 : $serverStore.drives) || [], { name: "file system", key: "fs" }];
  $$unsubscribe_serverStore();
  $$unsubscribe_dkey();
  return `<div class="${"p-1"}"><label class="${" text-blue-700 dark:text-blue-300"}" for="${"select"}">storage</label>
	<select class="${"w-full border bg-gray-100 focus:bg-gray-50 rounded px-3 py-2 outline-none"}"${add_attribute("value", $dkey, 1)}>${each(drives, ({ key, name }) => `<option class="${"py-1"}"${add_attribute("value", key, 0)}>${escape$1(name)}</option>`)}</select></div>`;
});
var connectDrive_svelte_svelte_type_style_lang = "input.svelte-1cs84u2{--tw-bg-opacity:1;--tw-text-opacity:1;--tw-ring-opacity:1;--tw-ring-color:rgba(96,165,250,var(--tw-ring-opacity));background-color:rgba(249,250,251,var(--tw-bg-opacity));border-radius:.125rem;border-width:1px;color:rgba(17,24,39,var(--tw-text-opacity));font-size:1.125rem;font-weight:600;line-height:1.75rem;padding:.5rem}input.svelte-1cs84u2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);outline:2px solid transparent;outline-offset:2px}.active.svelte-1cs84u2{--tw-border-opacity:1;border-bottom-width:2px;border-color:rgba(37,99,235,var(--tw-border-opacity))}";
const css$2 = {
  code: "input.svelte-1cs84u2{--tw-bg-opacity:1;--tw-text-opacity:1;--tw-ring-opacity:1;--tw-ring-color:rgba(96,165,250,var(--tw-ring-opacity));background-color:rgba(249,250,251,var(--tw-bg-opacity));border-radius:.125rem;border-width:1px;color:rgba(17,24,39,var(--tw-text-opacity));font-size:1.125rem;font-weight:600;line-height:1.75rem;padding:.5rem}input.svelte-1cs84u2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);outline:2px solid transparent;outline-offset:2px}.active.svelte-1cs84u2{--tw-border-opacity:1;border-bottom-width:2px;border-color:rgba(37,99,235,var(--tw-border-opacity))}",
  map: `{"version":3,"file":"connect-drive.svelte","sources":["connect-drive.svelte"],"sourcesContent":["<script>\\n\\timport store from '$store';\\n\\tconst socket = store.g('socket');\\n\\tlet key, name, anounce, lookup;\\n\\tconst clear = () => {\\n\\t\\tname = '';\\n\\t\\tkey = '';\\n\\t};\\n\\tclear();\\n\\tlet new_drive = true;\\n<\/script>\\n\\n<div>\\n\\t<div class=\\"flex gap-2\\">\\n\\t\\t<button class=\\"btn uppercase\\" class:active={!new_drive} on:click={() => (new_drive = false)}\\n\\t\\t\\t>connect</button\\n\\t\\t>\\n\\t\\t<button class=\\"btn uppercase\\" class:active={new_drive} on:click={() => (new_drive = true)}\\n\\t\\t\\t>new</button\\n\\t\\t>\\n\\t</div>\\n\\t<div class=\\"flex gap-2 flex-wrap\\">\\n\\t\\t{#if new_drive}\\n\\t\\t\\t<div class=\\"\\">\\n\\t\\t\\t\\t<label class=\\"  \\" for=\\"input#name\\">Drive Name</label><br />\\n\\t\\t\\t\\t<input id=\\"name\\" bind:value={name} class=\\"dark:ring-gray-400\\" placeholder=\\"awesome\\" />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"\\">\\n\\t\\t\\t\\t<label class=\\"  \\" for=\\"input#key\\">never replicate</label><br />\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\tid=\\"key\\"\\n\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\n\\t\\t\\t\\t\\tbind:value={key}\\n\\t\\t\\t\\t\\tclass=\\"dark:ring-gray-400\\"\\n\\t\\t\\t\\t\\tplaceholder=\\"[a-z0-9]{'{64}'}\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</div>\\n\\t\\t{:else}\\n\\t\\t\\t<div class=\\"\\">\\n\\t\\t\\t\\t<label class=\\"  \\" for=\\"input#name\\">Drive Name</label><br />\\n\\t\\t\\t\\t<input id=\\"name\\" bind:value={name} class=\\"dark:ring-gray-400\\" placeholder=\\"awesome\\" />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"\\">\\n\\t\\t\\t\\t<label class=\\"  \\" for=\\"input#key\\">Drive Key</label><br />\\n\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\tid=\\"key\\"\\n\\t\\t\\t\\t\\tbind:value={key}\\n\\t\\t\\t\\t\\tclass=\\"dark:ring-gray-400\\"\\n\\t\\t\\t\\t\\tplaceholder=\\"[a-z0-9]{'{64}'}\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</div>\\n\\t<div class=\\"flex pt-1\\">\\n\\t\\t<button\\n\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\tsocket.signal('add-drive', { name, key });\\n\\t\\t\\t\\tclear();\\n\\t\\t\\t}}\\n\\t\\t\\tclass=\\"text-white mr-1 p-2 rounded-md text-xl active:ring ring-blue-500 dark:ring-gray-500  bg-blue-600 dark:bg-gray-600\\"\\n\\t\\t\\t>Add Drive</button\\n\\t\\t>\\n\\t\\t<button\\n\\t\\t\\ton:click={() => {\\n\\t\\t\\t\\tsocket.signal('connect-drive', { name, key });\\n\\t\\t\\t\\tclear();\\n\\t\\t\\t}}\\n\\t\\t\\tclass=\\"text-white mr-1 p-2  rounded-md text-xl active:ring ring-blue-500 dark:ring-gray-500  bg-blue-600 dark:bg-gray-600\\"\\n\\t\\t\\t>Connect Drive</button\\n\\t\\t>\\n\\t</div>\\n</div>\\n\\n<style lang=\\"postcss\\">input{--tw-bg-opacity:1;--tw-text-opacity:1;--tw-ring-opacity:1;--tw-ring-color:rgba(96,165,250,var(--tw-ring-opacity));background-color:rgba(249,250,251,var(--tw-bg-opacity));border-radius:.125rem;border-width:1px;color:rgba(17,24,39,var(--tw-text-opacity));font-size:1.125rem;font-weight:600;line-height:1.75rem;padding:.5rem}input:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);outline:2px solid transparent;outline-offset:2px}.active{--tw-border-opacity:1;border-bottom-width:2px;border-color:rgba(37,99,235,var(--tw-border-opacity))}</style>\\n"],"names":[],"mappings":"AAyEsB,oBAAK,CAAC,gBAAgB,CAAC,CAAC,kBAAkB,CAAC,CAAC,kBAAkB,CAAC,CAAC,gBAAgB,uCAAuC,CAAC,iBAAiB,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,cAAc,OAAO,CAAC,aAAa,GAAG,CAAC,MAAM,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,QAAQ,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,QAAQ,KAAK,CAAC,oBAAK,MAAM,CAAC,wBAAwB,kFAAkF,CAAC,iBAAiB,uFAAuF,CAAC,WAAW,IAAI,uBAAuB,CAAC,CAAC,IAAI,gBAAgB,CAAC,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,GAAG,CAAC,sBAAO,CAAC,oBAAoB,CAAC,CAAC,oBAAoB,GAAG,CAAC,aAAa,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC"}`
};
const Connect_drive = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  store.g("socket");
  let key, name;
  const clear = () => {
    name = "";
    key = "";
  };
  clear();
  $$result.css.add(css$2);
  return `<div><div class="${"flex gap-2"}"><button class="${["btn uppercase svelte-1cs84u2", ""].join(" ").trim()}">connect</button>
		<button class="${["btn uppercase svelte-1cs84u2", "active"].join(" ").trim()}">new</button></div>
	<div class="${"flex gap-2 flex-wrap"}">${`<div class="${""}"><label class="${"  "}" for="${"input#name"}">Drive Name</label><br>
				<input id="${"name"}" class="${"dark:ring-gray-400 svelte-1cs84u2"}" placeholder="${"awesome"}"${add_attribute("value", name, 1)}></div>
			<div class="${""}"><label class="${"  "}" for="${"input#key"}">never replicate</label><br>
				<input id="${"key"}" type="${"checkbox"}" class="${"dark:ring-gray-400 svelte-1cs84u2"}" placeholder="${"[a-z0-9]" + escape$1("{64}")}"${add_attribute("value", key, 1)}></div>`}</div>
	<div class="${"flex pt-1"}"><button class="${"text-white mr-1 p-2 rounded-md text-xl active:ring ring-blue-500 dark:ring-gray-500  bg-blue-600 dark:bg-gray-600"}">Add Drive</button>
		<button class="${"text-white mr-1 p-2  rounded-md text-xl active:ring ring-blue-500 dark:ring-gray-500  bg-blue-600 dark:bg-gray-600"}">Connect Drive</button></div>
</div>`;
});
const Drives = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let drives;
  let savedDrives;
  let $serverStore, $$unsubscribe_serverStore;
  const serverStore = store.g("serverStore");
  $$unsubscribe_serverStore = subscribe(serverStore, (value) => $serverStore = value);
  store.g("socket");
  let { class: cls = "mt-2 p-2 rounded bg-gray-100 dark:bg-gray-600 border-gray-200 shadow border-t-2 dark:border-t-0" } = $$props;
  if ($$props.class === void 0 && $$bindings.class && cls !== void 0)
    $$bindings.class(cls);
  drives = ($serverStore == null ? void 0 : $serverStore.drives) || [];
  savedDrives = ($serverStore == null ? void 0 : $serverStore.savedDrives) || [];
  $$unsubscribe_serverStore();
  return `<div${add_attribute("class", cls, 0)}><h3 class="${"text-blue-500 dark:text-white text-3xl"}">Saved Drives</h3>
	${each(savedDrives, ({ name, key, connected, host }) => `<div class="${"flex justify-between mt-1 bg-blue-100 p-1 rounded dark:bg-gray-700 active:ring-1 ring-blue-200 dark:ring-gray-600"}"><div>${escape$1(name)}</div>
			<div class="${"flex gap-1"}">${!["public", "private"].includes(name) ? `<button class="${"bg-red-200 p-1 mx-1 active:ring-1 rounded-md text-red-700"}">delete</button>` : ``}
				${connected ? `<button class="${"bg-red-200 p-1 mx-1 active:ring-1 rounded-md text-red-700"}">off</button>
					<button class="${"bg-green-200 p-1 rounded-sm text-green-700"}">connected</button>` : `<button class="${"bg-green-200 p-1 mx-1 active:ring-1 rounded-md text-green-700"}">on</button>
					<button class="${"bg-red-200 p-1 rounded-sm text-red-700"}">not connected</button>`}</div>
		</div>`)}</div>
<div${add_attribute("class", cls, 0)}><h3 class="${"text-blue-500 dark:text-white text-3xl"}">Connected Drives</h3>
	${each(drives, ({ name, key, host }) => `<div class="${"flex justify-between mt-1 bg-blue-100 p-1 rounded dark:bg-gray-700 active:ring-1 ring-blue-200 dark:ring-gray-600"}"><div>${escape$1(name)}</div>
			<div class="${"flex gap-1"}">${!savedDrives.find((drive) => drive.key === key) ? `<button class="${"bg-blue-200 p-1 mx-1 active:ring-1 rounded-md text-blue-700"}">save</button>` : ``}
				<button class="${"bg-red-200 p-1 mx-1 active:ring-1 rounded-md text-red-700"}">disconnect</button></div>
		</div>`)}</div>`;
});
const Child_process = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let child_processes;
  let $serverStore, $$unsubscribe_serverStore;
  const serverStore = store.g("serverStore");
  $$unsubscribe_serverStore = subscribe(serverStore, (value) => $serverStore = value);
  store.g("socket");
  let { class: cls = "mt-2 p-2 rounded bg-gray-100 dark:bg-gray-600 border-gray-200 shadow border-t-2 dark:border-t-0" } = $$props;
  if ($$props.class === void 0 && $$bindings.class && cls !== void 0)
    $$bindings.class(cls);
  child_processes = ($serverStore == null ? void 0 : $serverStore.child_processes) || [];
  $$unsubscribe_serverStore();
  return `<div${add_attribute("class", cls, 0)}><h3 class="${"text-blue-500 dark:text-white text-3xl"}">child process</h3>
	${each(child_processes, ({ pid, cm }) => `<div class="${"flex justify-between mt-1 bg-blue-100 p-1 rounded dark:bg-gray-700 ring-blue-200 dark:ring-gray-600"}"><div>${escape$1(cm)}</div>
			<div>${escape$1(pid)}</div>
			<button class="${"text-white bg-red-500 btn"}">kill</button>
		</div>`)}</div>`;
});
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${$$result.head += `${$$result.title = `<title>Hyp</title>`, ""}`, ""}
<div class="${"flex justify-between h-full mx-2 gap-2 flex-grow flex-wrap bg-gray-50 dark:bg-gray-800 rounded-sm dark:text-blue-100 select-none"}"><div class="${"w-full h-full  mt-2 p-2 border-gray-200 dark:border-t-0"}"><h3 class="${"text-blue-500 dark:text-white text-5xl"}">Drive Manager</h3>
		<div class="${"flex justify-between flex-wrap text-gray-900"}">${validate_component(Storage_select, "StorageSelect").$$render($$result, {}, {}, {})}
			</div>
		<div class="${" mt-2  p-2 rounded-lg border-gray-500 shadow-sm border-[.3px] text-gray-800 text-xl  dark:text-blue-100"}">${validate_component(Connect_drive, "ConnectDrive").$$render($$result, {}, {}, {})}</div>
		${validate_component(Drives, "Drives").$$render($$result, {
    class: "mt-2 p-2 rounded-lg border-gray-500 shadow-sm border-[.3px] text-gray-800 text-xl  dark:text-blue-100"
  }, {}, {})}
		${validate_component(Child_process, "ChildProcess").$$render($$result, {
    class: " mt-2  p-2 rounded-lg border-gray-500 shadow-sm border-[.3px] text-gray-800 text-xl  dark:text-blue-100"
  }, {}, {})}</div>
	<div class="${"w-full h-full border border-gray-500"}"><h3>chat Manager</h3></div></div>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Routes
});
var spinner_svelte_svelte_type_style_lang = ".svelte-spinner.svelte-17s643t{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:svelte-17s643t-svelte-spinner_infinite-spin;animation-name:svelte-17s643t-svelte-spinner_infinite-spin;-webkit-animation-timing-function:linear;animation-timing-function:linear;transition-property:transform}@-webkit-keyframes svelte-17s643t-svelte-spinner_infinite-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes svelte-17s643t-svelte-spinner_infinite-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}";
const css$1 = {
  code: ".svelte-spinner.svelte-17s643t{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:svelte-17s643t-svelte-spinner_infinite-spin;animation-name:svelte-17s643t-svelte-spinner_infinite-spin;-webkit-animation-timing-function:linear;animation-timing-function:linear;transition-property:transform}@-webkit-keyframes svelte-17s643t-svelte-spinner_infinite-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes svelte-17s643t-svelte-spinner_infinite-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}",
  map: `{"version":3,"file":"spinner.svelte","sources":["spinner.svelte"],"sourcesContent":["<script>\\n\\texport let size = 60;\\n\\texport let speed = 850;\\n\\texport let color = 'rgba(0,0,0,0.4)';\\n\\texport let thickness = 6;\\n\\texport let gap = 60;\\n\\texport let radius = 45;\\n\\tlet dash;\\n\\t$: dash = (2 * Math.PI * radius * (100 - gap)) / 100;\\n<\/script>\\n\\n<svg\\n\\theight={size}\\n\\twidth={size}\\n\\tstyle=\\"animation-duration:{speed}ms;\\"\\n\\tclass=\\"svelte-spinner\\"\\n\\tviewBox=\\"0 0 100 100\\"\\n>\\n\\t<circle\\n\\t\\trole=\\"presentation\\"\\n\\t\\tcx=\\"50\\"\\n\\t\\tcy=\\"50\\"\\n\\t\\tr={radius}\\n\\t\\tstroke={color}\\n\\t\\tfill=\\"none\\"\\n\\t\\tstroke-width={thickness}\\n\\t\\tstroke-dasharray=\\"{dash},100\\"\\n\\t\\tstroke-linecap=\\"round\\"\\n\\t/>\\n</svg>\\n\\n<style>.svelte-spinner{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:svelte-spinner_infinite-spin;animation-name:svelte-spinner_infinite-spin;-webkit-animation-timing-function:linear;animation-timing-function:linear;transition-property:transform}@-webkit-keyframes svelte-spinner_infinite-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes svelte-spinner_infinite-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}</style>\\n"],"names":[],"mappings":"AA+BO,8BAAe,CAAC,kCAAkC,QAAQ,CAAC,0BAA0B,QAAQ,CAAC,uBAAuB,2CAA4B,CAAC,eAAe,2CAA4B,CAAC,kCAAkC,MAAM,CAAC,0BAA0B,MAAM,CAAC,oBAAoB,SAAS,CAAC,mBAAmB,2CAA4B,CAAC,EAAE,CAAC,UAAU,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC,WAAW,2CAA4B,CAAC,EAAE,CAAC,UAAU,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC,CAAC"}`
};
const Spinner = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { size = 60 } = $$props;
  let { speed = 850 } = $$props;
  let { color = "rgba(0,0,0,0.4)" } = $$props;
  let { thickness = 6 } = $$props;
  let { gap = 60 } = $$props;
  let { radius = 45 } = $$props;
  let dash;
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.speed === void 0 && $$bindings.speed && speed !== void 0)
    $$bindings.speed(speed);
  if ($$props.color === void 0 && $$bindings.color && color !== void 0)
    $$bindings.color(color);
  if ($$props.thickness === void 0 && $$bindings.thickness && thickness !== void 0)
    $$bindings.thickness(thickness);
  if ($$props.gap === void 0 && $$bindings.gap && gap !== void 0)
    $$bindings.gap(gap);
  if ($$props.radius === void 0 && $$bindings.radius && radius !== void 0)
    $$bindings.radius(radius);
  $$result.css.add(css$1);
  dash = 2 * Math.PI * radius * (100 - gap) / 100;
  return `<svg${add_attribute("height", size, 0)}${add_attribute("width", size, 0)} style="${"animation-duration:" + escape$1(speed) + "ms;"}" class="${"svelte-spinner svelte-17s643t"}" viewBox="${"0 0 100 100"}"><circle role="${"presentation"}" cx="${"50"}" cy="${"50"}"${add_attribute("r", radius, 0)}${add_attribute("stroke", color, 0)} fill="${"none"}"${add_attribute("stroke-width", thickness, 0)} stroke-dasharray="${escape$1(dash) + ",100"}" stroke-linecap="${"round"}"></circle></svg>`;
});
const FolderIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { size = "100%" } = $$props;
  let { strokeWidth = 2 } = $$props;
  let { class: customClass = "" } = $$props;
  if (size !== "100%") {
    size = size.slice(-1) === "x" ? size.slice(0, size.length - 1) + "em" : parseInt(size) + "px";
  }
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.strokeWidth === void 0 && $$bindings.strokeWidth && strokeWidth !== void 0)
    $$bindings.strokeWidth(strokeWidth);
  if ($$props.class === void 0 && $$bindings.class && customClass !== void 0)
    $$bindings.class(customClass);
  return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("width", size, 0)}${add_attribute("height", size, 0)} fill="${"none"}" viewBox="${"0 0 24 24"}" stroke="${"currentColor"}"${add_attribute("stroke-width", strokeWidth, 0)} stroke-linecap="${"round"}" stroke-linejoin="${"round"}" class="${"feather feather-folder " + escape$1(customClass)}"><path d="${"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"}"></path></svg>`;
});
const FileIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { size = "100%" } = $$props;
  let { strokeWidth = 2 } = $$props;
  let { class: customClass = "" } = $$props;
  if (size !== "100%") {
    size = size.slice(-1) === "x" ? size.slice(0, size.length - 1) + "em" : parseInt(size) + "px";
  }
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.strokeWidth === void 0 && $$bindings.strokeWidth && strokeWidth !== void 0)
    $$bindings.strokeWidth(strokeWidth);
  if ($$props.class === void 0 && $$bindings.class && customClass !== void 0)
    $$bindings.class(customClass);
  return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("width", size, 0)}${add_attribute("height", size, 0)} fill="${"none"}" viewBox="${"0 0 24 24"}" stroke="${"currentColor"}"${add_attribute("stroke-width", strokeWidth, 0)} stroke-linecap="${"round"}" stroke-linejoin="${"round"}" class="${"feather feather-file " + escape$1(customClass)}"><path d="${"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"}"></path><polyline points="${"13 2 13 9 20 9"}"></polyline></svg>`;
});
const Files = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $files, $$unsubscribe_files;
  let $loading, $$unsubscribe_loading;
  const files = store.g("folder");
  $$unsubscribe_files = subscribe(files, (value) => $files = value);
  const loading = store.g("loading");
  $$unsubscribe_loading = subscribe(loading, (value) => $loading = value);
  createEventDispatcher();
  crossfade({
    duration: (d2) => Math.sqrt(d2 * 200),
    fallback(node, params) {
      const style = getComputedStyle(node);
      const transform = style.transform === "none" ? "" : style.transform;
      return {
        duration: 600,
        easing: quintOut,
        css: (t) => `
					transform: ${transform} scale(${t});
					opacity: ${t}
				`
      };
    }
  });
  {
    console.log("files", $files);
  }
  $$unsubscribe_files();
  $$unsubscribe_loading();
  return `<div${add_attribute("data-main-menu", true, 0)}>${$loading === "load-page" ? `<div class="${"grid place-items-center w-full pt-10"}">${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {})}</div>` : ``}
	<div${add_attribute("data-main-menu", true, 0)} class="${[
    "flex justify-between gap-2 flex-wrap pt-1",
    $loading === "load-page" ? "hidden" : ""
  ].join(" ").trim()}">${($files == null ? void 0 : $files.length) ? `${each($files, ({ name, path, stat }) => `<div class="${"group anchor-tooltip context-menu__item"}" tabindex="${"-1"}"><div class="${"relative"}"><button class="${"bg-gray-200 text-gray-800 dark:bg-gray-600 dark:text-white group-hover:bg-gray-300 rounded-[3px]  dark:group-hover:bg-gray-500 active:ring cursor-pointer w-36 h-24 overflow-hidden"}"><div class="${"flex justify-center"}">${stat.isFile === true || stat.isFile !== false && stat.isFile !== "dir" ? `${validate_component(FileIcon, "FileIcon").$$render($$result, { size: "4x" }, {}, {})}` : `${validate_component(FolderIcon, "FolderIcon").$$render($$result, { size: "4x" }, {}, {})}`}</div>
							<p class="${"text-semibold text-center select-none dark:text-white"}">${escape$1(truncate(name))}
							</p></button>
						</div>
					<div class="${"tooltip"}"><div class="${"flex flex-col"}"><span class="${"text-semibold whitespace-wrap"}">name: ${escape$1(name)}</span>
							<span>size: ${escape$1(stat.size)}</span>
							<span>type: ${escape$1(!stat.isFile ? "folder" : "file")}</span>
						</div></div>
				</div>`)}` : `<div class="${"text-4xl md:text-7xl text-blue-400 dark:text-blue-300 p-3 md:p-4 lg:p-6"}">this folder is empty
			</div>`}</div></div>`;
});
const File_manager = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let dirs;
  let dir;
  let storage;
  let options2;
  let hideFilemenu;
  let $dkey, $$unsubscribe_dkey;
  let $dirs, $$unsubscribe_dirs = noop, $$subscribe_dirs = () => ($$unsubscribe_dirs(), $$unsubscribe_dirs = subscribe(dirs, ($$value) => $dirs = $$value), dirs);
  let $$unsubscribe_pos;
  let $show_hidden, $$unsubscribe_show_hidden;
  let $loading, $$unsubscribe_loading;
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  const dkey = store.g("dkey");
  $$unsubscribe_dkey = subscribe(dkey, (value) => $dkey = value);
  const loading = store.g("loading");
  $$unsubscribe_loading = subscribe(loading, (value) => $loading = value);
  const show_hidden = store.g("show_hidden");
  $$unsubscribe_show_hidden = subscribe(show_hidden, (value) => $show_hidden = value);
  const pos = store.g("pos");
  $$unsubscribe_pos = subscribe(pos, (value) => value);
  const open = (detail = {}) => __awaiter(void 0, void 0, void 0, function* () {
    store.dispatch("open", Object.assign(Object.assign({}, detail), options2));
  });
  let dirlist;
  let scrollY = 0;
  let lastScroll = scrollY;
  $$subscribe_dirs(dirs = store.g("dirs", $dkey));
  dir = $dirs[$dkey];
  storage = $dkey !== "fs" ? "drive" : "fs";
  options2 = { dkey: $dkey, dir, storage };
  dirlist = dir.split("/").reduce((arr, name) => {
    let path;
    if (arr.length === 0)
      path = name || "";
    else if (arr[arr.length - 1].path === "/")
      path = "/" + name;
    else
      path = arr[arr.length - 1].path + "/" + name;
    return [...arr, { name: name || "root", path: path || "/" }];
  }, []);
  {
    if ($dkey || $show_hidden) {
      open();
    }
  }
  hideFilemenu = scrollY > lastScroll;
  $$unsubscribe_dkey();
  $$unsubscribe_dirs();
  $$unsubscribe_pos();
  $$unsubscribe_show_hidden();
  $$unsubscribe_loading();
  return `

${$$result.head += `${$$result.title = `<title>File Manager</title>`, ""}`, ""}
<div class="${"px-2 flex-grow md:px-10 relative"}" id="${"file-manager"}"><div class="${[
    "flex justify-between flex-wrap flex-col-reverse md:flex-row sticky z-10 top-[7%] md:top-[13%] bg-white dark:bg-gray-800 shadow border-b-2 pb-1",
    hideFilemenu ? "hidden" : ""
  ].join(" ").trim()}"><div class="${"flex text-base md:text-2xl overflow-x-auto gap-1"}">${dir === "/" ? `<button class="${"anchor-tooltip"}"><div class="${"flex"}"><span class="${"text-blue-500  dark:text-blue-100 dark:active:text-blue-300 active:text-blue-500 cursor-pointer border-2 border-gray-400 dark:border-gray-200 rounded"}">${validate_component(FolderIcon, "FolderIcon").$$render($$result, {
    size: "1x",
    class: " w-6 h-6 md:h-8 md:w-8"
  }, {}, {})}</span>
						<span class="${"tooltip"}">${escape$1("root")}</span></div></button>` : `${each(dirlist, (item) => `<button class="${"anchor-tooltip"}"><div class="${"flex"}">
							<span class="${"text-blue-600 dark:text-blue-100 dark:active:text-blue-300 active:text-blue-400 cursor-pointer border-2 border-gray-400 dark:border-gray-200 rounded"}">${item.name === "root" ? `${validate_component(FolderIcon, "FolderIcon").$$render($$result, { class: " w-6 h-6 md:h-8 md:w-8" }, {}, {})}` : `${escape$1(truncate(item.name))}`}</span>
							<span class="${"tooltip"}">${escape$1(item.name)}</span></div>
					</button>`)}`}</div>
		<div class="${"flex gap-1"}"><button><label for="${"show-hidden"}" class="${"text-blue-600 text-2xl dark:text-blue-100 dark:active:text-blue-300 active:text-blue-400 cursor-pointer px-1"}">hidden</label><input id="${"show-hidden"}" type="${"checkbox"}"${add_attribute("checked", $show_hidden, 1)}></button>
			${validate_component(Storage_select, "StorageSelect").$$render($$result, {}, {}, {})}
			</div></div>
	${validate_component(Files, "Files").$$render($$result, {}, {}, {})}

	${$loading === "load-next-page" ? `<div class="${"grid place-items-center"}">${validate_component(Spinner, "Spinner").$$render($$result, {}, {}, {})}</div>` : ``}
	<div class="${"w-full h-1"}"></div></div>`;
});
var fileManager = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": File_manager
});
const ArrowLeftIcon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { size = "100%" } = $$props;
  let { strokeWidth = 2 } = $$props;
  let { class: customClass = "" } = $$props;
  if (size !== "100%") {
    size = size.slice(-1) === "x" ? size.slice(0, size.length - 1) + "em" : parseInt(size) + "px";
  }
  if ($$props.size === void 0 && $$bindings.size && size !== void 0)
    $$bindings.size(size);
  if ($$props.strokeWidth === void 0 && $$bindings.strokeWidth && strokeWidth !== void 0)
    $$bindings.strokeWidth(strokeWidth);
  if ($$props.class === void 0 && $$bindings.class && customClass !== void 0)
    $$bindings.class(customClass);
  return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("width", size, 0)}${add_attribute("height", size, 0)} fill="${"none"}" viewBox="${"0 0 24 24"}" stroke="${"currentColor"}"${add_attribute("stroke-width", strokeWidth, 0)} stroke-linecap="${"round"}" stroke-linejoin="${"round"}" class="${"feather feather-arrow-left " + escape$1(customClass)}"><line x1="${"19"}" y1="${"12"}" x2="${"5"}" y2="${"12"}"></line><polyline points="${"12 19 5 12 12 5"}"></polyline></svg>`;
});
const View_nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  let $colorScheme, $$unsubscribe_colorScheme;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  const colorScheme = store.state.colorScheme;
  $$unsubscribe_colorScheme = subscribe(colorScheme, (value) => $colorScheme = value);
  let { cls = "" } = $$props;
  if ($$props.cls === void 0 && $$bindings.cls && cls !== void 0)
    $$bindings.cls(cls);
  $$unsubscribe_page();
  $$unsubscribe_colorScheme();
  return `<div class="${"flex justify-between z-50 bg-transparent select-none " + escape$1(cls)}"><div><a href="${"/file-manager"}" class="${[
    "p-1 snav-link font-bold bg-gray-200 dark:bg-gray-800 lead3 anchor rounded-md",
    $page.path === "/file-manager" ? "active" : ""
  ].join(" ").trim()}"><div class="${"flex"}"><span>${validate_component(ArrowLeftIcon, "ArrowLeftIcon").$$render($$result, { size: "1x" }, {}, {})}</span><span>Hyp</span></div></a></div>
	<div class="${"nav-link "}">${$colorScheme === "light" ? `<button class="${"p-1 border rounded-full bg-gray-200 border-gray-300 hover:bg-gray-400"}"><img${add_attribute("src", dark_mode, 0)} alt="${"dark"}"></button>` : `<button class="${"p-1 border rounded-full dark:bg-gray-800 border-gray-400 dark:hover:bg-gray-600"}"><img${add_attribute("src", light_mode, 0)} alt="${"light"}"></button>`}</div></div>`;
});
async function load$3({ page: page2, fetch, session, context }) {
  return {};
}
const _layout_reset = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_colorScheme;
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  const colorScheme = store.state.colorScheme;
  $$unsubscribe_colorScheme = subscribe(colorScheme, (value) => value);
  $$unsubscribe_colorScheme();
  $$unsubscribe_page();
  return `<div class="${"w-full min-h-screen mx-auto flex flex-col justify-between bg-gray-200 dark:bg-gray-800 shadow-md"}"><div class="${[
    escape$1($page.path.includes("media") ? "max-h-screen" : "h-full") + " flex flex-col flex-grow",
    $page.path.includes("embed") ? "min-h-screen" : ""
  ].join(" ").trim()}">${validate_component(View_nav, "Header").$$render($$result, {}, {}, {})}
		${slots.default ? slots.default({}) : ``}</div></div>

${validate_component(Notifications, "NotificationDisplay").$$render($$result, {}, {}, {})}`;
});
var __layout_reset = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": _layout_reset,
  load: load$3
});
async function load$2({ page: page2, fetch, session, context }) {
  const args = {
    storage: page2.params.storage,
    path: escape(page2.query.get("path")),
    ctype: page2.query.get("ctype"),
    dkey: page2.query.get("dkey"),
    size: page2.query.get("size")
  };
  const url = API + `/pdf?storage=${args.storage}&dkey=${args.dkey}&ctype=${args.ctype}&size=${args.size}&path=${args.path}`;
  const filename = args.path.split("/").reverse()[0];
  return {
    props: { ctype: args.ctype, url, filename }
  };
}
const Embed_u5Bstorageu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { url } = $$props, { ctype } = $$props, { filename } = $$props;
  if ($$props.url === void 0 && $$bindings.url && url !== void 0)
    $$bindings.url(url);
  if ($$props.ctype === void 0 && $$bindings.ctype && ctype !== void 0)
    $$bindings.ctype(ctype);
  if ($$props.filename === void 0 && $$bindings.filename && filename !== void 0)
    $$bindings.filename(filename);
  return `${$$result.head += `${$$result.title = `<title>${escape$1(filename)}</title>`, ""}`, ""}
<embed${add_attribute("src", url, 0)}${add_attribute("type", ctype, 0)} class="${"flex-grow"}">`;
});
var embed__storage_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Embed_u5Bstorageu5D,
  load: load$2
});
var media__storage__svelte_svelte_type_style_lang = "#media.svelte-1kne34m{bottom:0;left:0;margin:auto;max-height:100%;max-width:100%;position:absolute;right:0;top:0}";
const css = {
  code: "#media.svelte-1kne34m{bottom:0;left:0;margin:auto;max-height:100%;max-width:100%;position:absolute;right:0;top:0}",
  map: `{"version":3,"file":"media-[storage].svelte","sources":["media-[storage].svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\t/**\\n\\t * @type {import('@sveltejs/kit').Load}\\n\\t */\\n\\texport async function load({ page, fetch, session, context }) {\\n\\t\\tconst args = {\\n\\t\\t\\tstorage: page.params.storage,\\n\\t\\t\\tpath: escape(page.query.get('path')),\\n\\t\\t\\tctype: page.query.get('ctype') || 'video',\\n\\t\\t\\tdkey: page.query.get('dkey'),\\n\\t\\t\\tsize: page.query.get('size')\\n\\t\\t};\\n\\t\\tlet url = API + \`/\${args.ctype.includes('image') ? 'image' : 'media'}\` + toQueryString(args);\\n\\t\\tconst filename = args.path.split('/').reverse()[0];\\n\\t\\treturn {\\n\\t\\t\\tprops: { ctype: args.ctype, url, filename }\\n\\t\\t};\\n\\t}\\n<\/script>\\n\\n<script>\\n\\texport let url, ctype, filename;\\n\\timport { scale } from 'svelte/transition';\\n\\timport { backOut, quintOut } from 'svelte/easing';\\n\\timport { API } from '$lib/getAPi';\\n\\timport { toQueryString } from '$lib/utils';\\n\\t// {path,size,ctype,storage,dkey}\\n\\t// console.log('url', url);\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>{filename}</title>\\n</svelte:head>\\n<div\\n\\tin:scale={{ delay: 100, start: 0.8, easing: backOut, duration: 200 }}\\n\\tout:scale={{ start: 0.9, easing: quintOut, duration: 200 }}\\n\\tclass=\\"flex-grow flex justify-center items-center\\"\\n>\\n\\t{#if ctype?.includes('audio')}\\n\\t\\t<!-- svelte-ignore a11y-media-has-caption -->\\n\\t\\t<audio id=\\"media\\" controls autoplay alt={filename}>\\n\\t\\t\\t<source src={url} type={ctype} />\\n\\t\\t\\tThis media file is supported by this browser\\n\\t\\t</audio>\\n\\t{:else if ctype?.includes('video')}\\n\\t\\t<!-- svelte-ignore a11y-media-has-caption -->\\n\\t\\t<video id=\\"media\\" controls autoplay alt={filename}>\\n\\t\\t\\t<source src={url} type={ctype.includes('x-matroska') ? 'video/webm' : ctype} />\\n\\t\\t\\tThis media file is supported by this browser\\n\\t\\t</video>\\n\\t{:else}\\n\\t\\t<img id=\\"media\\" src={url} alt={filename} />\\n\\t{/if}\\n</div>\\n\\n<style>#media{bottom:0;left:0;margin:auto;max-height:100%;max-width:100%;position:absolute;right:0;top:0}</style>\\n"],"names":[],"mappings":"AAuDO,qBAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,WAAW,IAAI,CAAC,UAAU,IAAI,CAAC,SAAS,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC"}`
};
async function load$1({ page: page2, fetch, session, context }) {
  const args = {
    storage: page2.params.storage,
    path: escape(page2.query.get("path")),
    ctype: page2.query.get("ctype") || "video",
    dkey: page2.query.get("dkey"),
    size: page2.query.get("size")
  };
  let url = API + `/${args.ctype.includes("image") ? "image" : "media"}` + toQueryString(args);
  const filename = args.path.split("/").reverse()[0];
  return {
    props: { ctype: args.ctype, url, filename }
  };
}
const Media_u5Bstorageu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { url } = $$props, { ctype } = $$props, { filename } = $$props;
  if ($$props.url === void 0 && $$bindings.url && url !== void 0)
    $$bindings.url(url);
  if ($$props.ctype === void 0 && $$bindings.ctype && ctype !== void 0)
    $$bindings.ctype(ctype);
  if ($$props.filename === void 0 && $$bindings.filename && filename !== void 0)
    $$bindings.filename(filename);
  $$result.css.add(css);
  return `${$$result.head += `${$$result.title = `<title>${escape$1(filename)}</title>`, ""}`, ""}
<div class="${"flex-grow flex justify-center items-center"}">${(ctype == null ? void 0 : ctype.includes("audio")) ? `
		<audio id="${"media"}" controls autoplay${add_attribute("alt", filename, 0)} class="${"svelte-1kne34m"}"><source${add_attribute("src", url, 0)}${add_attribute("type", ctype, 0)}>
			This media file is supported by this browser
		</audio>` : `${(ctype == null ? void 0 : ctype.includes("video")) ? `
		<video id="${"media"}" controls autoplay${add_attribute("alt", filename, 0)} class="${"svelte-1kne34m"}"><source${add_attribute("src", url, 0)}${add_attribute("type", ctype.includes("x-matroska") ? "video/webm" : ctype, 0)}>
			This media file is supported by this browser
		</video>` : `<img id="${"media"}"${add_attribute("src", url, 0)}${add_attribute("alt", filename, 0)} class="${"svelte-1kne34m"}">`}`}
</div>`;
});
var media__storage_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Media_u5Bstorageu5D,
  load: load$1
});
const Render = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { content = "" } = $$props;
  if ($$props.content === void 0 && $$bindings.content && content !== void 0)
    $$bindings.content(content);
  return `<div></div>`;
});
async function load({ page: page2, fetch, session, context }) {
  const args = {
    storage: page2.params.storage,
    path: page2.query.get("path"),
    ctype: page2.query.get("ctype"),
    dkey: page2.query.get("dkey"),
    size: page2.query.get("size")
  };
  let url = `/textfile` + toQueryString(args);
  const resp = await api.get(url);
  let body = resp.body;
  if (args.ctype.includes("json"))
    body = JSON.stringify(resp.body);
  const filename = args.path.split("/").reverse()[0];
  console.log("resp-text", resp);
  return {
    props: { ctype: args.ctype, body, filename, url }
  };
}
const Text_u5Bstorageu5D = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $render, $$unsubscribe_render;
  let $colorScheme, $$unsubscribe_colorScheme;
  let { body = "" } = $$props, { ctype = "" } = $$props, { url = "" } = $$props, { filename = "" } = $$props;
  const colorScheme = store.g("colorScheme");
  $$unsubscribe_colorScheme = subscribe(colorScheme, (value) => $colorScheme = value);
  const render2 = store.g("render");
  $$unsubscribe_render = subscribe(render2, (value) => $render = value);
  const canRender = filename.includes("html") || filename.includes("xml") || ctype.includes("markdown");
  let highlightedCode;
  if ($$props.body === void 0 && $$bindings.body && body !== void 0)
    $$bindings.body(body);
  if ($$props.ctype === void 0 && $$bindings.ctype && ctype !== void 0)
    $$bindings.ctype(ctype);
  if ($$props.url === void 0 && $$bindings.url && url !== void 0)
    $$bindings.url(url);
  if ($$props.filename === void 0 && $$bindings.filename && filename !== void 0)
    $$bindings.filename(filename);
  {
    {
      try {
        highlightedCode = highlightCode(ctype.replace(/[a-z]+\//, ""), body);
      } catch (error2) {
        console.log("language unknown");
      }
    }
  }
  $$unsubscribe_render();
  $$unsubscribe_colorScheme();
  return `<div class="${"flex flex-col flex-grow"}"><div class="${"flex justify-around text-lg dark:text-blue-300"}"><div>Type: ${escape$1(ctype)}</div>
		${canRender ? `<div><button class="${"bg-blue-200 p-1 rounded-sm text-lg text-gray-700 active:ring-1 active:ring-blue-300 capitalize"}">${escape$1($render ? "un" : "")}render</button></div>` : ``}
		<div>Filename: ${escape$1(filename)}</div></div>
	<div class="${"border-t-2 border-gray-600 mt-1 dark:text-blue-200 flex-grow flex flex-col"}">${canRender && $render ? `${ctype.includes("markdown") ? `
				${validate_component(Render, "Render").$$render($$result, { content: marked(body) }, {}, {})}` : `<iframe${add_attribute("src", API + url, 0)} frameborder="${"0"}" class="${"w-full flex-grow"}" title="${"filename"}"></iframe>
				`}` : `<pre><code class="${"hljs"}">${highlightedCode}</code></pre>`}</div></div>

${$$result.head += `${$$result.title = `<title>${escape$1(filename)}</title>`, ""}${$colorScheme === "light" ? `<link rel="${"stylesheet"}" href="${"https://unpkg.com/@highlightjs/cdn-assets@10.6.0/styles/foundation.min.css"}" data-svelte="svelte-wkcaz4">` : `<link rel="${"stylesheet"}" href="${"https://unpkg.com/@highlightjs/cdn-assets@10.6.0/styles/night-owl.min.css"}" data-svelte="svelte-wkcaz4">`}`, ""}`;
});
var text__storage_ = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": Text_u5Bstorageu5D,
  load
});
export { init, render };
