import{a7 as t}from"./vendor-51b7d296.js";const e=(t,e=5e3)=>{let s=0;return(...n)=>{const a=(new Date).getTime();if(!(a-s<e))return s=a,t(...n)}},s=(t="",e=10)=>{const s=t.length,n=/(.+)\.([\w]+)$/.exec(t);if(n){const t=s>e?".. .":".";return n[1].slice(0,e)+t+n[2]}return t=t.slice(0,e),s>e?t+"..":t},n=(t,e,s)=>{},a=(t,{options:e={},isIntersecting:s=n,notIntersecting:a=n,cls:r="",unobserve:o=!0}={})=>{const i=new IntersectionObserver(((e,n)=>{e.forEach((e=>{e.isIntersecting?(s(t,e,n),r&&t.classList.add(r)):(a(t,e,n),r&&t.classList.remove(r))}))}),e);return o&&i.observe(t),{destroy(){i.unobserve(t)}}},r=(t,e="nav-intersecting")=>{const s=document.querySelector("#nav-md"),n=document.querySelector("#nav-sm");a(t,{options:{rootMargin:"-9.5% 0% 0% 0%"},isIntersecting:(...t)=>{s.classList.remove(e),n.classList.remove(e)},notIntersecting:(...t)=>{s.classList.add(e),n.classList.add(e)}})},o=async(t,e,...s)=>{console.log("axiosFetch",e);try{const n=await t(e,...s);return{status:n.status,ok:!0,headers:n.headers,body:n.data}}catch(n){return{status:n.response.status,ok:!1,headers:n.response.headers,body:n.response.data}}},i=(t={})=>{try{return Object.entries(t).reduce(((t,e)=>`${t}&${e.join("=")}`),"").replace(/^&/,"?")}catch(e){return""}},c=t=>{let e={x:0,y:0};return t||(t=window.event),e.x=t.clientX,e.y=t.clientY,e};class l{constructor({total:t=0,limit:e=50,page:s=0}){this.limit=e,this.page=s,this.total=t}get pages(){return Math.ceil(this.total/this.limit)}get offset(){return((this.page||1)-1)*this.limit}get has_next(){return this.page<this.pages}get has_prev(){return this.page>1}get page_count(){return this.page<this.pages?this.limit:this.total-this.limit*((this.page||1)-1)}next(){this.has_next&&(this.page++,console.log("page_count",this.page_count))}prev(){this.has_prev&&this.page--}}let h={}.VITE_API_URL;const g="3788";h||(h=`${window.location.protocol}//${window.location.hostname}:3788`),console.log("API",h,"3788");const p=t.create({baseURL:h}),u={get:(t,...e)=>o(p.get,t,...e),post:(t,...e)=>o(p.post,t,...e)};export{h as A,a as I,r as N,l as P,u as a,s as b,e as c,c as g,g as p,i as t};
